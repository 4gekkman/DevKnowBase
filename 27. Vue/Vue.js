////=================================================////
////                                                 ////
////                     Vue.js                      ////
////                                                 ////
////=================================================////
////                      ////
////         Ссылки       ////
////                      ////
////======================////

  // Официальные ресурсы //
  //---------------------//

    # Сайт Vue.js (en, ru)
        https://vuejs.org
        https://ru.vuejs.org

    # Руководство v2 (en, ru)
        https://vuejs.org/v2/guide/
        https://ru.vuejs.org/v2/guide/

    # Сообщество и поддержка
        https://gitter.im/vuejs/vue           // Чат в гиттере
        https://forum.vuejs.org/              // Форум

    # Шаблоны
        https://github.com/vuejs-templates

    # Новости
        https://twitter.com/vuejs             // Частые новости
        https://medium.com/the-vue-point      // Блог, редко обновляется

    # Ресурсы
        https://github.com/vuejs/awesome-vue  // Обновляемый список относящихся к vue ресурсов (компоненты, туториалы и т.д.)
        https://vuex.vuejs.org/ru             // Vuex (core plugin)
        https://router.vuejs.org/ru           // Router (core plugin)

////==================================================////
////                         ////
////        Оглавление       ////
////                         ////
////=========================////


  # А.  Теоретические основы Vue.js

    А1. План изучения Vue.js
    А2. Установка, совместимость
    А3. Введение в Vue



////==================================================////
////                         ////
////        Содержание       ////
////                         ////
////=========================////


А1. План изучения Vue.js

--------------------------------------
Подоглавление:

  # Введение
  # Как лучше изучать Vue.js?

--------------------------------------

> Введение
  - Это короткая глава про то, как лучше изучать Vue.js
  - Данное руководстов актуально на 29.05.2017.

> Как лучше изучать Vue.js?

  1. Официальная документация Vue.js на родном языке
    - Используй последнюю версию документации (на 25.05.2017 - v2).
      https://ru.vuejs.org/v2/guide/
    - Напиши сквозную методичку по всей документации.
    - Так ты получишь полный обзор возможностей фреймворка.

  2. Плагины ядра vuex и router
    - Используй последнюю версию документации (на 25.05.2017 - v2).
    - Напиши сквозные методички по документации vuex и router.
    - Это позволит с самого начала применять их для работы.

  3. Пополнение собственной подборки полезных сторонних vue-компонентов
    - Создай в этой методичке отдельный раздел для этих целей.
    - И постепенно пополняй его инфой о сторонних полезных vue-компонентах.
    - Используй awsome-vue и оцициальный twitter в качестве источников.

А2. Установка, совместимость

--------------------------------------
Подоглавление:

  # Ссылки
  # Введение
  
  # Вопросы совместимости Vue.js

    ▪ ECMAScript >= 5
    ▪ IE >= 9

  # Способы подключения Vue.js к проекту

    ▪ Подключение файла через <script>
    ▪ Подключение ссылки из CDN через <script>
    ▪ Подключение через NPM

  # Официальный CLI от VUE
  # Объяснение различных сборок VUE
  # Runtime + Компилятор vs Runtime-only

    ▪ Когда нужен компилятор
    ▪ Для однофайловых компонентов *.vue компилятор не нужен
    ▪ Псевдоним в сборщике при использовании полных сборок

  # Режим разработки vs режим production

    ▪ UMD-сборки
    ▪ CommonJS и ES Module
    ▪ Переменная среды process.env.NODE_ENV

--------------------------------------

> Ссылки
  
  # [Официальноу руководство] Установка
      https://ru.vuejs.org/v2/guide/installation.html

> Введение
  - Рассмотрены вопросы установки, совместимости, использования Vue.js.

> Вопросы совместимости Vue.js

  • ECMAScript >= 5
    - Vue.js должен работать с браузерами, поддерживающими ES >= 5

  • IE >= 9
    - Vue.js не работает с IE <= 8, т.к. там нельзя эмулировать ES >= 5.

> Способы подключения Vue.js к проекту

  • Подключение файла через <script>
    - Скачать файл с Vue.js и подключить.
    - На данный момент (30.05.2017) есть 2 версии:

      ▪ Для разработчиков   | С предупреждениями для удобства разработки и отладки
      ▪ Для production      | Без предупреждений, ~30кб.

  • Подключение ссылки из CDN через <script>
    - Рекомендуемый CDN: https://unpkg.com/vue

  • Подключение через NPM
    - Автор рекомендует NPM для крупных Vue-приложений.
    - Этот вариант хорошо работает с инструментами сборке,
      такими как Webpack и Browserify.
    - В Vue также есть совместимые с ними инструменты
      для использования однофайловых компонентов.

> Официальный CLI от VUE
  - У VUE есть официальный интерпретатор командной строке (CLI).
  - Это позволяет быстро создавать каркас одностраничных приложений.
  - Предлагаемые шаблоны содержат всё необходимое для фронтенд-разработки.
  - Всего за несколько минут вы получите конфигурацию с hot-reload,
    линтингом кода при сохранении и настроенной конфигурации
    production-сборки.

> Объяснение различных сборок VUE
  
  ▪ Схема

                                UMD                 CommonJS                ES Module
    ----------------------------------------------------------------------------------------------
    Полная                      vue.js              vue.common.js           vue.esm.js
    Runtime-only                vue.runtime.js      vue.runtime.common.js   vue.runtime.esm.js
    Полная (production)         vue.min.js          -
    Runtime-only (production)   vue.runtime.min.js  -

  ▪ Терминология
    - Полная      | Сборка, которая содержит и компилятор, и runtime.
    - Компилятор  | Код, который отвечает за компиляцию строковых
                    шаблонов в JavaScript render-функции.
    - Runtime     | Код, который отвечает за создание экземпляров Vue,
                    рендеринг и изменение виртуального DOM, и т.д. Обобщённо, этой
                    всё, за исключением компилятора.
    - UMD         | UMD-сборки можно использовать сразу в браузере,
                    подключая тегом <script>. Файлом по умолчанию в Unpkg CDN из
                    https://unpkg.com/vue будет Runtime + Компилятор UMD-сборка (vue.js).
    - CommonJS    | CommonJS-сборки предназначены для использования вместе со старыми
                    инструментами сборки, такими как Browserify или Webpack 1. Файлом
                    по умолчанию для них (pkg.main) будет Runtime-only CommonJS сборка
                    (vue.runtime.common.js).
    - ES Module   | ES module сборки предназначены для использования с современными
                    инструментами сборки, такими как Webpack 2 или Rollup. Файлом по умолчанию
                    для них (pgk.module) будет Runtime-only ES Module сборка
                    (vue.runtime.esm.js).

  ▪ Runtime + Компилятор vs Runtime-only
    
    ▪ Когда нужен компилятор
      - Компилятор нужен, если надо компилировать шаблоны на лету.
      - Например:

          // это требует компилятора
          new Vue({
            template: `<div>{{ hi }}</div>`
          })

          // это нет
          new Vue({
            render (h) {
              return h('div', this.hi)
            }
          })    

    ▪ Для однофайловых компонентов *.vue компилятор не нужен
      - Vue-loader и vuefiy компилируют шаблоны внутри *.vue на этапе сборки.
      - Так что, с файлми *.vue можно использовать runtime-only сборки.

    ▪ Псевдоним в сборщике при использовании полных сборок
      - Runtime-only сборки примерно на 30% легче, в сравнении с полными.
      - Поэтому, есть смысл использовать их, когда это возможно.
      - А для использования полных сборок надо настроить псевдоним в сборщике:

        ▪ Webpack
          module.exports = {
            // ...
            resolve: {
              alias: {
                'vue$': 'vue/dist/vue.esm.js' // 'vue/dist/vue.common.js' для webpack 1
              }
            }
          }

        ▪ Rollup
          const alias = require('rollup-plugin-alias')
          rollup({
            // ...
            plugins: [
              alias({
                'vue': 'vue/dist/vue.esm.js'
              })
            ]
          })

        ▪ Browserify
          - Добавьте в package.json вашего проекта:
            {
              // ...
              "browser": {
                "vue": "vue/dist/vue.common.js"
              }
            }

> Режим разработки vs режим production

  • UMD-сборки
    - Тут есть min и не-min файлы.
    - min для продакшн, не-min для разработки.

  • CommonJS и ES Module
    - Тут не минифицированный код.
    - Ведь эти сборки предназначены для инструментов сборки.
    - Хочешь минифицировать - легко это сделаешь через оные.
    
  • Переменная среды process.env.NODE_ENV
    - Также эти сборки палят переменную среды: process.env.NODE_ENV.
    - В каждой системе сборки можно использовать соотв.плагин:

      ▪ Webpack

          var webpack = require('webpack')
          module.exports = {
            // ...
            plugins: [
              // ...
              new webpack.DefinePlugin({
                'process.env': {
                  NODE_ENV: JSON.stringify('production')
                }
              })
            ]
          }

      ▪ Rollup

          const replace = require('rollup-plugin-replace')
          rollup({
            // ...
            plugins: [
              replace({
                'process.env.NODE_ENV': JSON.stringify('production')
              })
            ]
          }).then(...)

      ▪ Browserify

          NODE_ENV=production browserify -g envify -e main.js | uglifyjs -c -m > build.js

А3. Введение в Vue

--------------------------------------
Подоглавление:

  # Ссылки
  # Введение

--------------------------------------

> Ссылки

  # [Официальноу руководство] Введение
      https://ru.vuejs.org/v2/guide/

> Введение

