////=================================================////
////                                                 ////
////                    Ionic 4.*                    ////
////                                                 ////
////=================================================////
////                      ////
////         Ссылки       ////
////                      ////
////======================////


  # Ionic

    • Сайт
      
        https://ionicframework.com

    • Документация

        https://ionicframework.com/docs

    • Репозиторий и документация для Ionic 4.*

      ▪ Ionic Core 4.0.0
          https://github.com/ionic-team/ionic/blob/master/core/README.md

      ▪ Ionic 4.* Docs
          https://github.com/ionic-team/ionic-docs

    • Маркет (плагины, темы, стартовые приложения)
    
        https://market.ionicframework.com

    • Магазин аксесуаров (футболки, наклейки и прочее)

        https://shop.ionicframework.com

    • Прогресс разработки ionic 4.*

        https://github.com/ionic-team/ionic/milestones

    • Форум и чат

        https://forum.ionicframework.com/
        http://ionicworldwide.herokuapp.com/

    • Twitter

      https://twitter.com/Ionicframework

    • Статьи про использование Ionic 4 + Vue

      ▪ Ionic 4 + Capacitor tutorials list #1
          https://ionictheme.com/ionic4-capacitor-tutorials-list-1/

      ▪ [02.06.2018] Building Mobile Apps With Capacitor And Vue.js
          https://www.smashingmagazine.com/2018/07/mobile-apps-capacitor-vue-js/

      ▪ [28.05.2018] Using the Capacitor in Vue.js app
          http://akhromieiev.com/tutorials/using-capacitor-in-vue-js-app/

      ▪ [15.02.2018]Ionic 4 Tutorial with Vue
          https://www.techiediaries.com/ionic-vue/

      ▪ [16.01.2018]Using Ionic 4 Components in Your Vue.js Apps
          https://alligator.io/vuejs/vue-ionic/

    • Демо-приложения на capacitor + vue + ionic 4

      ▪ A Mobile Demo App with Vue, Capacitor and Ionic 4 Components
          https://github.com/techiediaries/vue-capacitor-ionic-app

    • Блог

        https://blog.ionicframework.com/

    • Интересные посты в блоге

      ▪ [23.07.2018] Announcing Ionic Identity Vault: Secure Biometric Authentication for Your Mobile App
          https://blog.ionicframework.com/announcing-ionic-identity-vault-secure-biometric-authentication-for-your-mobile-app/

      ▪ [22.06.2018] Using TestFlight for User Testing with Ionic
          https://blog.ionicframework.com/using-testflight-for-user-testing-with-ionic/

      ▪ [21.05.2018] Announcing Ionicons v4!
          https://blog.ionicframework.com/announcing-ionicons-v4/

      ▪ [18.04.2018] Ionic Semantic Versioning, Release Schedule and LTS
          https://blog.ionicframework.com/ionic-semantic-versioning-release-schedule-and-lts/

      ▪ [16.04.2018] Introducing A New Guide to Progressive Web Apps
          https://blog.ionicframework.com/introducing-a-new-guide-to-progressive-web-apps/

      ▪ [05.04.2018] Ionic at VueConf
          https://blog.ionicframework.com/ionic-at-vueconf/

      ▪ [20.03.2018] Using Ionic Deploy to Beta Test New Features
          https://blog.ionicframework.com/using-ionic-deploy-to-beta-test-new-features/

      ▪ [15.03.2018] Improved Perceived Performance with Skeleton Screens
          https://blog.ionicframework.com/improved-perceived-performance-with-skeleton-screens/

      ▪ [27.02.2018] Announcing Capacitor 1.0.0 Alpha
          https://blog.ionicframework.com/announcing-capacitor-1-0-0-alpha/

      ▪ [12.02.2018] Customizing Ionic Apps for Web & Mobile
          https://blog.ionicframework.com/customizing-ionic-apps-for-web-mobile/

      ▪ [16.01.2018] Announcing the Ionic PWA Toolkit Beta
          https://blog.ionicframework.com/announcing-the-ionic-pwa-toolkit-beta/

      ▪ [31.10.2017] Announcing Ionic DevApp
          https://blog.ionicframework.com/announcing-ionic-devapp/

      ▪ [25.10.2017] Ionic: 2017-18 Roadmap
          https://blog.ionicframework.com/ionic-2017-18-roadmap/

      ▪ [04.10.2017] WKWebView for All: A new webview for Ionic
          https://blog.ionicframework.com/wkwebview-for-all-a-new-webview-for-ionic/

      ▪ [18.09.2017] The end of Framework Churn
          https://blog.ionicframework.com/the-end-of-framework-churn/


////==================================================////
////                         ////
////        Оглавление       ////
////                         ////
////=========================////


  # А.  Теоретические основы Ionic 4.*

    А1. Как пользоваться документацией Ionic 4.*
    А2. Введение в Ionic

  # X.  Практика и наработки

    X1. 


////==================================================////
////                         ////
////        Содержание       ////
////                         ////
////=========================////


А1. Как пользоваться документацией Ionic 4.*
--------------------------------------
Подоглавление:

  # Ссылки
  # Как обстоят дела с документацией на конец июля 2017
  # Как пользоваться документацией, пока она не опубликована
  
--------------------------------------

> Ссылки

  • Официальная документация Ionic 4.*
      https://github.com/ionic-team/ionic-docs

  • Ionic v4 component preview app
      https://github.com/ionic-team/component-preview

> Как обстоят дела с документацией на конец июля 2017

  Ionic v4 официально ещё не вышел.
  Документация официально нигде не опубликована.
  Текущея её версия лежит на github.

> Как пользоваться документацией, пока она не опубликована

  1. Сначала устанавливаем NodeJS и NPM, если ещё нет

    curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
    sudo apt-get install -y nodejs
    npm i npm@latest -g
    npm update npm -g

  2. Открываем свой рабочий linux-дистрибутив
  3. Создаём папку ionic в корне и переходим в неё.
  4. Клонируем репозиторий с доками в неё:

    git clone https://github.com/ionic-team/ionic-docs.git docs  

  5. Переходим в docs, и устанавливаем все npm-зависимости

    cd docs
    npm install

  6. Устанавливаем Ionic v4 component preview app

    Это приложение, которое используется в документации
    для демонстрации компонентов Ionica вживую, так сказать.

    Его нужно отдельно склонировать в папку 
    /ionic/component-preview-app

      cd /ionic
      git clone https://github.com/ionic-team/component-preview.git component-preview-app

    Дальше идём в склонированное приложение,
    устанавливаем зависимости и собираем его:

      cd /ionic/component-preview-app
      npm install
      npm run build

    Дальше копируем папку /ionic/component-preview-app/docs-www
    в /ionic/docs/src/content/component-preview-app/

    Если что, папка component-preview-app находится
    в .gitignore проекта, так что можно без опаски
    делать git pull

  7. Устанавливаем документы для API, CLI, Native, Storage, Component preview

    cd /ionic/docs
    npm run api-docs

  8. Собираем проект

    npm run build

  9. Запускаем сервак

    npm run start

  10. Заходим в браузер и видим доки по адресу 

    localhost:3000/docs

  11. Периодически делаем git pull свежих изменений

    Разработчики Ionic периодически редактируют и
    обновляют доки, поэтому, пока ты их используешь
    в описанном выше режиме, надо их периодически
    обновлять.

    ▪ Обновление документации

      cd /ionic/docs
      git pull

      npm install
      npm run build

    ▪ Обновление Ionic v4 component preview app

      cd /ionic/component-preview-app
      git pull

      npm install
      npm run build

      Затем, копируем с заменой папку /ionic/component-preview-app/docs-www
      в /ionic/docs/src/content/component-preview-app/

    ▪ Обновление документов для API, CLI, Native, Storage, Component preview

      cd /ionic/docs
      git pull
      npm run api-docs
      npm run build


А2. Введение в Ionic
--------------------------------------

  # Что из себя представляет Ionic Framework?

    ▪ Общая информация об Ionic
    ▪ Какие цели преследовали авторы, создавая Ionic
      ▪ Кроссплатформенный
      ▪ Основан на веб-стандартах
      ▪ Прекрасная архитектура
      ▪ Простота
    ▪ Ionic является open source проектом с лицензией MIT
    ▪ Про Ionic CLI
    ▪ О совместимости с фреймворками
      ▪ Ionic v4 и JavaScript
      ▪ Ionic v4 и Angular
      ▪ Будут билды Ionic v4 для Vue и React
    ▪ О v4
    ▪ Про Ionic Pro
    ▪ Экосистема Ionic

  # Основные понятия

    ▪ Введение в основные понятия
    ▪ UI компоненты
    ▪ Непрерывность платформы: адаптация и мимикрия core-компонент под платформы
    ▪ Навигация, навигационные стеки, параллельная навигация
    ▪ Доступ к нативным платформам
    ▪ Архитектура
    ▪ Темы

  # Поддержка браузерами

    ▪ 


--------------------------------------

> Что из себя представляет Ionic Framework?

  • Общая информация об Ionic

    Ionic Framework - open source набор UI-инструментов для
    создания производительных, высококачественных мобильных
    и десктопных приложений, на основе веб-технологий
    (html, css, js).

    Ionic концентрируется на пользовательском интерфейсе
    (фронтенде), или на UI-взаимодействиях приложения 
    (элементы управления, взаимодействия, жесты, анимации).
    Его легко изучить, и легко использовать совместно
    с другими библиотеками или фреймворками, такими как
    Angular или Vue. Но можно обойтись и вообще без
    каких-либо других фронтенд-фреймворков.

    В настоящий момент, Ionic имеет официальную интеграцию
    с Angular, но авторы сообщают, что поддержка для 
    Vue и React в разработке.

  • Какие цели преследовали авторы, создавая Ionic

    ▪ Кроссплатформенный

      Пишем один код, одно приложение, которое работает
      на многих платформах, таких как iOS, Android, desctop,
      PWA (Progressive Web App)

      Девиз: "Write once, run anywhere".
             "Пишем одно приложение, которое работает везде".

    ▪ Основан на веб-стандартах

      Ionic основан на надёжных веб-технологиях: html, css, js.
      Поэтому, написанное сегодня Ionic-приложение будет 
      работоспособно на долгие-долгие годы вперёд. И никакая
      организация не сможет что-то там запретить или контролировать
      его (был бы камень в огород React Native, но в 
      феврале 2018 Facebook изменил лицензию React на MIT).

    ▪ Прекрасная архитектура

      Чистая, простая, функциональная. Ionic сконструирован
      работать и отображаться прекрасно прямо из коробки,
      на всех поддерживаемых платформах. Core-компоненты,
      типографика, интерактивные парадигмы и красивая
      и расширяемая базовая тема.

    ▪ Простота

      Ionic изначально разрабатывался таким образом, чтобы
      создание Ionic-приложений было лёгким и приятным делом,
      и любой специалист по веб-разработке мог быстро вникнуть
      и приступить к делу.

  • Ionic является open source проектом с лицензией MIT

    Ionic Framework является на 100% open source проектом,
    с лицензией MIT. Это означает, что его можно использовать
    в личных и коммерческих проектах бесплатно.

  • Про Ionic CLI

    Ionic CLI, это инструмент для быстрого создания
    новых Ionic-приложений из шаблонов, а также,
    в нём есть ряд полезных во время разработки оных команд.

    В нём также есть dev-сервер, инструменты для сборки 
    и отладки, и много чего ещё.

    Если у вас Ionic Pro, вы можете использовать CLI для
    экспорта кода и взаимодействия с вашим pro-аккаунтом
    через API.

  • О совместимости с фреймворками

    Ionic < 4 был заточен под Angular, без которого
    с ним нельзя было работать.

    А Ionic >= 4 перестал зависеть от Angular. Теперь
    с ним можно работать хоть вообще без фреймворков,
    хоть с тем же Vue или React, или любым другим
    фреймворком или библиотекой.

    То есть, теперь, Ionic превратился в независимую
    библиотеку.

    ▪ Ionic v4 и JavaScript

      Главной задачей при разработке Ionic v4 было убрать
      зависимость от Angular. Сделать так, чтобы 
      core-компоненты могли работать независимо, просто
      как обычный JS.

      В том время, как работа через фреймворки может быть
      удобна для разработки больших приложений большими
      командами, теперь возможно быстренько, местечково, 
      где-то там заюзать Ionic по-мелочи.

    ▪ Ionic v4 и Angular

      Angular сделал Ionic великим. В том время, как
      core-компоненты (как описано выше), в v4 были
      сделаны независимыми, пакет @ionic/angular делает
      интеграцию с инфраструктурой Angular очень простой.

      @ionic/angular включает всю функциональность, которую
      Angular-разработчики ожидают, и интегрируется с core-
      библиотеками Angular, вроде Angular router.

    ▪ Будут билды Ionic v4 для Vue и React

      Поддержка для других фреймворков ожидается в будущем
      релизе. В настоящий момент, разрабатываются 
      биндинги для Vue и React.

  • О v4

    Ionic Framework V4 является важным шагом вперёд.
    Есть существенные изменения, по сравнению с предыдущими 
    версиями, в лежащих в его основе технологиях. Новая
    версия сфокусирована на производительности, совместимости,
    и расширяемости.

    Хотя Ionic v4 имеет пакет @ionic/angular, позволяющий
    легко тесно интегрировать Ionic и Angular, он приобрел
    независимость от фреймворков. По сути, стал библиотекой,
    которую можно использовать хоть на чистом js, хоть с любым
    фреймворком.

    Переход на веб-стандарты позволил Ionic V4 полагаться
    скорее на то, на что способны браузеры, чем на то, на 
    что способен код из Angular.

    На практике, это означает мЕньшее время загрузки, 
    лучшая производительность, и меньше лишнего кода.

  • Про Ionic Pro

    Чтобы помочь управлять Ionic-приложениями на протяжении
    всего их жизненного цикла, команда Ionic предлагает
    платное решение Ionic Pro.

    Это платное решение идёт отдельно от open source 
    фреймворка Ionic, последний можно легко использовать
    без Pro.

    Ionic Pro помогает разработчикам и командам наблюдать
    и отслеживать ожибки во время выполнения кода, выполнять
    нативные сборки приложений в облаке, обновлять Ionic-
    приложения через push'и через личный кабинет.

    Чтобы получить Pro, нужно создать Ionic Account.
    Начать можно с бесплатного плана Starter.
    Ну, и можно перейти на какой-нибудь из платных планов,
    которые дают больше возможностей.

  • Экосистема Ionic

    Ionic Framework активно разрабатывается и поддерживается
    на полный рабочий день core-командой, а развитие экосистемы
    направляется международным сообществом разработчиков и 
    кантрибьютеров. Разработчики, большие и малые компании
    используют Ionic для создания прекрасных приложений,
    которые работают везде.

> Основные понятия

  • Введение в основные понятия

    Для новичков в разработке на Ionic, будет полезно
    увидеть общую картину того, как тут всё работает - 
    ключевую философию, концепты и инструменты в основе
    проекта.
    Прежде, чем погружаться в сложные темы, сначала
    следует понять основы Ionic Framework, и как он
    работает.

  • UI компоненты

    Ionic является библиотекой UI компонент, каждая из 
    которых может быть переиспользована, и которые
    используются в приложении, как строительные блоки.

    Компоненты Ionic построены на основе веб стандартов,
    с использованием HTML, CSS и JavaScript.

    Не смотря на то, что все компоненты собраны заранее,
    они изначально сделаны так, чтобы их можно было
    легко кастомизировать. Благодаря этому, для каждого
    приложения необходимые компоненты можно "допилить"
    индивидуально.

    Также, можно все компоненты глобально привязать к 
    теме, и потом легко менять тему всего приложения
    (подробнее о темах см.ниже).

  • Непрерывность платформы: адаптация и мимикрия core-компонент под платформы

    Platform Continuity - встроенная фича Ionic Framework,
    позволяющая разработчикам приложений использовать один
    и тот же код для разных платформ.

    Каждый компонент в Ionic адаптирует свой внешний вид
    и поведение в зависимости от того, на какой платформе
    он запущен в настоящий момент.

    Например, устройства Apple, такие как iPhone и iPad,
    используют свой iOS design language. 
    Аналогично, на устройствах под управлением Android
    используется язык дизайна от Google - Material Design.

    Если вы скачаете Ionic-приложение из Apple App Store,
    Ionic применит к нему тему для iOS. А если скачаете
    из Google Play, то тему для Android Material Design.

    Для платформы pwa Ionic по умолчания будет применять
    тему Material Design.

    Наконец, всё это дело можно настраивать, какие темы
    для каких платформ применять.

  • Навигация, навигационные стеки, параллельная навигация

    Традиционные сайты используют линейную историю. Это значит,
    что пользователь переходит по ссылкам на сайте вперёд,
    а может нажимать на кнопку "назад" и возвращаться в обратном
    порядке. Грубо говоря, имеется лишь 1 "навигационный стек".

    Ionic-приложения в этом плане могут сделать следующий шаг,
    и обеспечить параллельную навигацию. Это значит, что можно
    иметь >= 1 навигационного стека, и переключаться между ними
    в любой момент.

    Для приложений, разрабатываемых на Angular и ionic/angular, 
    авторы рекомендуют использовать Angular Router. Предыдущая
    версия Ionic поставлялась со своим собственным, встроенным
    роутером. Однако, от этой практики отказались, так что
    используйте роутер от фреймворка.

  • Доступ к нативным платформам

    Удивительным следствием того факта, что Ionic построен
    на основе веб-технологий, является то, что Ionic-приложения
    может работать практически на любой платформе:

      ▪ desktop computers
      ▪ phones
      ▪ tablets
      ▪ cars
      ▪ refrigerators
      ▪ ...

    Один и тот же код Ionic-приложения может работать на 
    многих платформах благодаря тому, что он основан на
    веб-стандартах и общем API, который есть на многих
    платформах.

    Одним из наиболее частых случаев использования Ionic,
    это сделать разом приложение, которое можно скачивать
    как из App Store, так и из Play Store. Благодаря тому,
    что и SDK для iOS, и SDK для Android предоставляют
    возможность использовать так называемые "web views",
    которые могут отрисовывать любое Ionic-приложение,
    это становится возможным.

    Такие проекты, как Capacitor и Cordova обычно используются,
    чтобы дать Ionic-приложениям доступ к нативным платформам.
    На практике это значит, что разработчики могут быстренько
    запилить веб-приложение, имея при этом доступ ко всем нативным
    API (таким как камера, GPS, и т.д.), и завернуть его в 
    iOS и Android приложение, и залить в сторы.

  • Архитектура

    Ionic-приложения структурированы вокруг идее о компонентах.
    Используя любой фронтенд-фрейморк по выбору, вы можете
    строить приложение из компонент, как кирпичный домик. 
    Вообще, сейчас все топовые фронтенд-фреймворки по
    такому же принципу и работают.
    Высокоуровневые "views", это лишь компоненты, которые 
    доступны по URL.

  • Темы

    В ядре, Ionic Framework построен с использованием CSS.
    Это позволяет нам использовать преимущества, которые 
    обеспечивают css-переменные. Это даёт возможность 
    невероятно легко разрабатывать приложение, которое 
    и выглядит прекрасно, и соответствует веб-стандартам.

    Из коробки авторы предлагают набор цветов для кастомизации
    тем. Но никто не мешает вообще все перетряхнуть, и 
    кастомизировать так, как больше нравится, как больше
    подходит для конкретной компании.

    Подробнее про темы смотрете в отдельной главе.

> Поддержка браузерами

  • 






