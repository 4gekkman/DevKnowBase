Справочник классов -> Оглавление

--------------------------------
N. Фасад | Описание | версия laravel - класс - псевдоним в IoC-контейнере


1. Route  | Управление роутингом  | v4.2 - Illuminate\Routing\Router - router

  > get               | Ловит GET-запросы к URI, передаёт в callback. Можно применить фильтры.
  > post              | Ловит POST-запросы к URI, передаёт в callback. Можно применить фильтры.
  > match             | Ловит запросы указанными методами к URI, передаёт в callback. Можно применить фильтры.
  > any               | Ловит все запросы к URI, передаёт в callback. Можно применить фильтры.

  > controller        | Ловит все запросы к URI, передаёт в REST-контроллер. Можно применить фильтры.
  > resource          | Ловит все запросы к URI, передаёт в RESOURCE-контроллер. Можно применить фильтры.

  > group             | Создать группу роутов, которой можно назначить общие параметры

  > filter            | Создать новый фильтр. Можно использовать в роутах, группах роутов.
  > when              | Применить указанный фильтр ко всем роутам, URI которых матчится с указанной строкой (возможно использования плейсхолдеров)
  > whenRegex         | Применить указанный фильтр ко всем роутам, URI которых матчится с указанным RegExp

  > currentRouteName  | Получить имя роута изнутри его callback-функции


2. View  | Управление представлениями  | v4.2 - Illuminate\View\View - view
                                         v4.2 - Illuminate\View\Factory

  > make      | Создаёт объект класса View из указанного файла
  > name      | Регистрирует имя $name за представлением $view
  > alias     | Регистрирует псевдоним $alias за представлением $view
  > of        | Создаёт объект класса View из именованного представления.
  > exists    | Определяет, существует ли указанный файл-представление

  -> nest     | Вложить в представление переменную, содержащую другое представление
  -> with     | Добавить в представление переменную с данными

  > share     | Расшарить переменную для всех представлений
  > composer  | Назначить представлению функцию-обарботчик событию composing
  > composers | Назначить представлениям функцию-обарботчик событию composing


3. URL  | Генерация URL  | v4.2 - Illuminate\Routing\UrlGenerator - url

  > current   | Возвращает текущий URL без query string
  > full      | Возвращает полный текущий URL
  > previous  | Возвращает URL без query string предыдущего запроса
  > to        | Принимает URI и генерирует по нему абсолютный URL
  > secure    | Принимает URL и генерирует по нему URL с HTTPS
  > route     | Возвращает URL/URI, с которым связан именованный (с помощью 'as') роут
  > action    | Возвращает URL/URI, с которым связан метод контроллера
  > asset     | Возвращает абсол. URL на ресурс: css, js, png и т.д.

4. APP  | Приложение  | v4.2 - Illuminate\Foundation\Application - app

  > environment       | получить имя стартового конфига приложения

  > before            | зарегистрировать before-фильтр приложения
  > after             | зарегистрировать after-фильтр приложения

  > abort             | возбудить исключение 404 (HttpException), можно передать данные
  > missing           | зарегистрировать callback для обработки 404 (HttpException)
  > error             | зарегистрировать callback для обработки ошибок приложения
  > fatal             | зарегистрировать callback для обработки фатальных ошибок

  > bind              | добавить переменную в IoC
  > make              | извлечь переменную из IoC
  > instance          | добавить переменную в IoC, содержащую экземпляр указанного класса
  > singleton         | добавить переменную в IoC (если это экземпляр, при послед вызовах будет возвращаться тот же самый)
  > resolving         | назначить обработчик события "извлечение" для указанного имени переменной в IoC
  > resolvingAny      | назначить обработчик события "извлечение" для всех переменных в IoC

  > register          | подключить service provider к приложению прямо во время его работы
  > detectEnvironment | указать имя конфига, из которого должен собраться экземпляр приложения

5.






--------------------------------