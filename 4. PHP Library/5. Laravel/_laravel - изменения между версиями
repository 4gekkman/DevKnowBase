////==========================================================////
////																													////
////          Laravel - изменения между версиями		          ////
////																													////
////==========================================================////
//// 			        		       ////
//// 			  Оглавление			 ////
//// 			        		       ////
////=========================////


  # А.  Изменения между версиями Laravel

    А1. Важные для меня изменения в Laravel 4.1
    А2. Важные для меня изменения в Laravel 4.2
    А3. Новое в Laravel 5.0
    А4. Новое в Laravel 5.0.16
    А5. Важные для меня изменения в Laravel 5.1

  # B.  Инструкции по переводу проектов на новые версии Laravel

    В1. Переход от версии 4.2 к версии 5.0
    В2. Переход от версии 5.0 к версии 5.0.16
    В3. Переход от версии 5.0.16 к версии 5.1




////==========================================================////

А1. Важные для меня изменения в Laravel 4.1

  --------------------------------------
  Подоглавление:

    - Ссылки
    - Важные для меня с прикладной точки зрения изменения

        А. Касающиеся базы данных
        Б. Касающиеся кук и кэша
        В. Касающиеся blade
        Г. Прочие

  --------------------------------------

  > Ссылки

      # Репозиторий git проекта Laravel, здесь полный список изменений
          https://github.com/laravel/framework/blob/4.1/src/Illuminate/Foundation/changes.json

  > Важные для меня с прикладной точки зрения изменения


    А. Касающиеся базы данных
    -------------------------

      А1. В класс Collection добавлен метод splice

      А2. В Query Builder добавлены методы oldest и newest.
        - Для извлечения самого старого/нового по timestamp элемента.

      А3. В класс Collection добавлен метод "prepend"
        - Позволяет добавить элемент в начало коллекции.
        - А метод "push" - в конец коллекции.

      А4. Метод WhereNotBetween добавлен в Query Builder

      А5. Возаращает пустую коллекцию, если в Eloquent::find передать пустой массив.

      А6. В query builder добавлен метод selectRaw

      А7. В query builder добавлены whereYear, whereMonth и whereDay

      А8. Новые методы joinWhere и leftJoinWhere в Query Builder

      А9. Query Builder теперь поддерживает функцию rememberForever
        - В дополнение к функции remember

      А10. В Collection добавлены методы merge, diff и intersect.

      А11. Model::destroy теперь возвращает кол-во удалённых записей

      А12. В Collecion добавлен метод groupBy

      А13. На счёт вложенных запросов в анон.функциях в Eloquent-запросе
        - Они теперь будут использовать query builder.

      А14. В sortBy и sortByDesc для Collection теперь можно передавать строку


    Б. Касающиеся кук и кэша
    ------------------------

      Б1. Для доступа к кукам теперь использовать Input::cookie
        - А Cookie::get будет удалено, начиная с v4.2

      Б2. При доступе к кукам вне контекста запроса
        - Придётся расшифровывать их вручную.

      Б3. Возможность помечать тегами кэш с помощью Cache::tags
        - Потом можно слить весь кэш, помеченные указанным тегом.

      Б4. Cache::add теперь возвращает true, если значение успешно добавлено


    В. Касающиеся blade
    -------------------

      В1. В Blade появилась возможность использовать or
        - {{ $name or 'Default' }}
        - {{ isset($name) ? $name : 'Default' }}


    Г. Прочие
    ---------

      Г1. Новый компонент SSH
        - Позволяет работать по SSH с удалёнными компьютерами.

      Г2. В dispatcher событий добавлен новый метод firing
        - И последним аргументом событие теперь не передаётся.

      Г3. В File::delete можно теперь передавать массив файлов.

      Г4. ID сессии теперь автоматом перегенирируется при логине

      Г5. Добавлен метод View::composers
        - Теперь можно использовать композеры представлений.


А2. Важные для меня изменения в Laravel 4.2

  --------------------------------------
  Подоглавление:

    - Ссылки
    - Важные для меня с прикладной точки зрения изменения

        А. Касающиеся базы данных
        Б. Касающиеся кук, кэша и сессий
        В. Касающиеся почты
        Г. Прочие

  --------------------------------------

  > Ссылки

      # Репозиторий git проекта Laravel, здесь полный список изменений
          https://github.com/laravel/framework/blob/4.2/src/Illuminate/Foundation/changes.json

  > Важные для меня с прикладной точки зрения изменения


    А. Касающиеся базы данных
    -------------------------

      А1. В Collection добавлен метод reject
        - Возвращает коллекцию эл-в, которые не пройдут true-тест
        - Принимает анон.функцию. Если возвр.false, такой эл-т проходит.

      А2. Добавлен метод updateOrCreate для Eloquent-модели
        - Ищет по ключу (1 арг.) запись, и обновляет её указанными данными.
        - А если не нашёл, то создаёт её, и наполняет указанными данными.

      А3. Добавлен метод keyBy в Collection
        - Как работает, описано здесь:
            http://laravel.com/docs/master/collections#method-keyby

      А4. Добавелн методм contains в Collection
        - Определяет, содержит ли коллекция эл-т с указанным значением


    Б. Касающиеся кук, кэша и сессий
    --------------------------------

      Б1. Добавлен метод Cache::pull
        - Извлекает кэш и удаляет его.

      Б2. Добавлен метод Session::pull
        - Извлекает значение из сессии, и удаляет его оттуда.


    В. Касающиеся почты
    -------------------

      В1. Добавлены API для сервисов Mailgun и Mandrill
        - Настроить эти сервисы можно в app/config/services.php
        - А отправлять почту, как обычно, методом Mail::send.

      В2. В качестве почтового транспорта добавлен 'log'
        - Пишет raw MIME string в логи.


    Г. Прочие
    ---------

      Г1. Класс Environment переименован в Factory
        - Illuminate\View\Environment       -> Illuminate\View\Factory
        - Illuminate\Pagination\Environment -> Illuminate\Pagination\Factory

      Г2. Изменение, касающееся softdelete (мягкого удаления)
        - В 4.1, чтобы включить softdelete, надо было в модели написать:

            protected $softDelete = true;

        - А в 4.2 надо написать:

            use SoftDeletingTrait;
            protected $dates = ['deleted_at'];


А3. Новое в Laravel 5.0

  --------------------------------------
  Подоглавление:

    - Ссылки

    - Новая структура каталогов проекта
    - Контракты
    - Кэширование роутов
    - Передача методов контроллерам
    - Определение событий, как объектов
    - Теперь можно представлять queued jobs как простые объекты-команды.
    - Laravel Scheduler
    - Команда php artisan tinker теперь использует Psych by Justin Hileman
    - Теперь для зависящих от среды настроек используется DotEnv
    - Функционал Elixir позволяет объединять различные ресурсы
    - Пакет Laravel Socialite для аутентификации через OAuth
    - Интергация файловой системы (локальная, Amazon S3, Rackspace)
    - Symfony VarDumper dd

  --------------------------------------

  > Ссылки:

      # Официальная документация по новинкам в Laravel 5:
          http://laravel.com/docs/5.0/releases#laravel-5.0

  > Введение
    - В 5.0 используется новая структура каталогов.
    - Теперь используется стандарт PSR-4.

  > Новая структура каталогов проекта

    #1. Удален каталог app/models
      - Теперь все модели лежат прямо в app.
      - И находятся в пространстве имён app.

    #2. Всё, что внутри app теперь находится в пространствах имён
      - Например, app/Exceptions/handler.php лежит в пр.имён App\Exceptions

    #3. Изменить пр.имён с app на [любое] можно одной командой
      - Допустим, требуется изменить пр.имён для всех классов в app.
      - Например (см.пример выше), чтобы было не App\Exceptions, а [любое]\Exceptions
      - Вручную делать это оч.сложно, т.к. php-файлв в app много.
      - Можно сделать это командой artisan:

          php artisan app:name [любое]

    #4. Controllers, middleware и requests теперь лежат в app/http
      - Т.К. все эти классы относятся к транспортному слою HTTP.
      - Requests - новый тип классов в laravel.

    #5. Файл filters.php упразднён
      - Теперь каждый фильтр лежит в собственном классе в app/http/middleware

    #6. Каталог app/start упразднён
      - Теперь его заменяет app/providers с сервис-провайдерами.

    #7. Views теперь находится по адресу resources/views

    #8. Файл routes.php теперь находится в app/http/routes.php

  > Контракты
    - Все важные компоненты Laravel теперь реализуют интерфейсы.
    - Эти интерфейсы лежат в репозитории illuminate/contracts.
    - Этот репозиторий не имеет внешних зависимостей.
    - Подробнее здесь: http://laravel.com/docs/5.0/contracts

  > Кэширование роутов
    - Если в приложении много Route::controller, их регистрация занимает много времени.
    - Теперь можно использовать новую artisan-команду route:cache.
    - Роуты кэшируются, и время на их регистрацию больше не тратится.
    - Другой вариант, использовать динамический роутинг, что тоже решает проблему.

  > Передача методов контроллерам
    - При использовании обычных контроллеров.
    - Раньше можно было передать им методы извне через конструктор.
    - А теперь можно передавать напрямую, прямо в методы.

  > Определение событий, как объектов
    - Раньше события можно было определять, просто как строки.
    - А теперь, как объект.
    - Подробнее см. здесь: http://laravel.com/docs/5.0/events

  > Теперь можно представлять queued jobs как простые объекты-команды.

  > Laravel Scheduler
    - Предоставляет единую точку входа для тиков от Cron.
    - И позволяет настраивать, какие методы при этом будут выполняться.
    - Подробнее здесь: http://laravel.com/docs/5.0/artisan#scheduling-artisan-commands

  > Команда php artisan tinker теперь использует Psych by Justin Hileman
    - В чем фишка: теперь это работает на Windows!

  > Теперь для зависящих от среды настроек используется DotEnv
    - Подробнее здесь: http://laravel.com/docs/5.0/configuration#environment-configuration

  > Функционал Elixir позволяет объединять различные ресурсы
    - По аналогии с Grunt, gulp.
    - Написан, кстати, Jeffrey Way'ем.
    - Подробнее здесь: http://laravel.com/docs/5.0/elixir

  > Пакет Laravel Socialite для аутентификации через OAuth
    - Дополнительный пакет для Laravel 5.
    - Позволяет легко организовать аутентификацию через OAuth.
    - На данный момент (25.05.2015) поддерживает: Facebook, Twitter, Google, GitHub.
    - Подробнее здесь: http://laravel.com/docs/5.0/authentication#social-authentication

  > Интергация файловой системы (локальная, Amazon S3, Rackspace)
    - С помощью библиотеки Flysystem.
    - Пример: Storage::put('file.txt', 'contents');
    - Подробнее: http://laravel.com/docs/5.0/filesystem

  > Symfony VarDumper dd
    - Пишешь: dd([1, 2, 3]);
    - Это аналог var_dump, только с красивым цветным выводом и т.д.
    
    
А4. Новое в Laravel 5.0.16

  --------------------------------------
  Подоглавление:

    - 

  -------------------------------------- 



А5. Важные для меня изменения в Laravel 5.1

  --------------------------------------
  Подоглавление:

    - 

  --------------------------------------    
    
    
    
    
В1. Переход от версии 4.2 к версии 5.0

  --------------------------------------
  Подоглавление:

    - 

  --------------------------------------  





В2. Переход от версии 5.0 к версии 5.0.16

  --------------------------------------
  Подоглавление:

    - 

  --------------------------------------  





В3. Переход от версии 5.0.16 к версии 5.1    
    
  --------------------------------------
  Подоглавление:

    - 

  --------------------------------------  


