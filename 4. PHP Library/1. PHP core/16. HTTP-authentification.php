<?php
/* --------------------------------------------------
---------------- О Г Л А В Л Е Н И Е ----------------
HTTP-аутентификация

> Пример Basic HTTP-аутентификации



-------------------------------------------------- */


// Пример Basic HTTP-аутентификации
    if(isset($_SERVER['PHP_AUTH_USER']))   $login = $_SERVER['PHP_AUTH_USER'];
    if(isset($_SERVER['PHP_AUTH_USER']))   $password = $_SERVER['PHP_AUTH_USER'];
    if(isset($_SERVER['PHP_AUTH_USER']))   $authType = $_SERVER['PHP_AUTH_USER'];

    if(!isset($login)) {          // если $login пуст
        // раз логин пуст, показать пользователю окошко для ввода логина и пароля.
        header('WWW-Authenticate: Basic realm="Название этой зоны сайта"');
        header('HTTP/1.0 401 Unauthorized');
        echo 'Этот текст будет показан, если пользователь нажмет на кнопку Cancel';
        exit;
    } else {                      // если $login не пуст
        echo '<p>Приветствую, ' . $login . '!</p>';
        echo '<p>Вы ввели пароль: ' . $password . '</p>';
    }






/* --------------------------------------------------
---------------- И Н Ф О Р М А Ц И Я ----------------

> HTTP-аутентификация в PHP
  > HTTP-аутентификация - это способ ограничить доступ к ресурсу,
    организовав на входе проверку логина и пароля, и пуская только избранных
    лиц по спискам.
  > Модель работы HTTP-аутентификации:
    > С помощью header() отправить браузеру заголовок 'WWW-Authenticate',
      который заставит его показать окошко для ввода логина и пароля.
    > Когда пользователь заполнит логин и пароль, и нажмет OK, этот же PHP
      скрипт снова будет запущен. Но теперь станут доступны данные:
      > PHP_AUTH_USER в массиве $_SERVER   - логин, который ввел пользователь.
      > PHP_AUTH_PW в массиве $_SERVER     - пароль, который ввел пользователь.
      > PHP_AUTH_TYPE в массиве $_SERVER   - тип аутентификации
    > Так что в скрипте должно быть:
      > условие, проверяющее пустоту вышеуказанных переменных - если они пусты,
        значит пользователь еще не вводил логин с паролем, а если не пусты, то
        надо сверить введенные логин и пароль со списком допущенных до ресурса,
        и решить, пускать ли этого пользователя.
  > Есть 2 типа аутентификации:
    > Basic
    > Digest


-------------------------------------------------- */
?> 


























