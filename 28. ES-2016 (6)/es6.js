////=================================================////
////                                                 ////
////            Что нового в ECMAScript 6            ////
////                                                 ////
////=================================================////
////                      ////
////         Ссылки       ////
////                      ////
////======================////

  // Ресурсы //
  //---------//

    # Современные возможности ES-2015
        https://learn.javascript.ru/es-modern

    # Здесь можно проверить степень реализации фич ES6 в браузерах
        http://kangax.github.io/compat-table/es6/

    # Транспайлер Babel
        https://babeljs.io/repl

////==================================================////
////                         ////
////        Оглавление       ////
////                         ////
////=========================////

  # А.  Современные возможности ES-2015

    А1. ES-2015 сейчас
    А2. Переменные: let и const
    А3. Деструктуризация


////==================================================////
////                         ////
////        Содержание       ////
////                         ////
////=========================////


А1. ES-2015 сейчас

--------------------------------------
Подоглавление:

  # Ссылки
  # Общие сведения о ES-2015
  # Какие в настоящее время есть возможности использовать ES6?

    ▪ Писать код конкретный JS-движок
    ▪ Использовать Babel

--------------------------------------

> Ссылки
  
  # [learn.javascript.ru] ES-2015 сейчас
      https://learn.javascript.ru/es-modern-usage

> Общие сведения о ES-2015

  • Был принят в 2015-м году.
  • Ещё не все возможности реализованы во всех браузерах.

> Какие в настоящее время есть возможности использовать ES6?

  • Писать код конкретный JS-движок
    - Про конкретные движки изестно, какие фичи ES6 они уже поддерживают.
    - Поэтому, можно просто не использовать не поддерживемы фичи.
    - Но этот вариант не особо годится для продакшн в большинстве случаев.
    - Для node.js сойдёт, но не для кроссбраузерной поддержки.

  • Использовать Babel

    ▪ Что такое Babel?
      - Это транспайлер, переписывающий код из ES-2015 на предыдущий стандарт.
    
    ▪ Состоит из двух частей

      1. Транспайлер.
      2. Полифилл
        - Это библиотека, которая добавляет в старые браузеры 
          поддержку возможностей, которые в современных браузерах являются встроенными.
        - Он добавляет методы Array.from, String.prototype.repeat и другие.

    ▪ Как обычно применяют babel
      - Обычно он работает на сервере.
      - В составе системы сборки, вроде webpack или brunch.
      - И автоматически переписывает весь код в ES5.
      - Настроить всё это легко, у большинства систем сборки есть плагин с Babel.


    - Он состоит из двух частей


А2. Переменные: let и const

--------------------------------------
Подоглавление:

  # Ссылки
  # Введение
  # Отличия let от var
  # Константа const

--------------------------------------

> Ссылки
  
  # [learn.javascript.ru] ES-2015 сейчас
      https://learn.javascript.ru/let-const

> Введение
  - В ES-2015 предусмотрены новые способы объявления переменных.
  - Через let и const вместо var.

> Отличия let от var

  1. Область видимости переменной let – блок {...}.
    - var видна везде в функции.
    - let видна только в блоке {...}, где объявлена.
    - Это касается и блоков в if, while, for.
    - Пример:

      let age = 10;
      if(true) { 
        let age = 15;
        console.log(age);           // 15 
      }
      console.log(age);             // 10

  2. Переменная let видна только после объявления.
    - Переменные var существуют и до объявления, они равны undefined.
    - Переменные let же не существую до объявления.
    - Плюс, переменные let нельзя повторно объявлять, будет ошибка.

  3. При использовании в цикле, для каждой итерации создаётся своя переменная.
    - Переменная var одна на все итерации цикла. И видна даже после него.
    - Но с let по-другому. Каждому повторению цикла - своя let.
    - Если внутри цикла есть сложенные объявлений функций, то 
      в замыкании каждой будет соответствующая итерации переменная let.
    - Пример:

        function makeArmy() {

          let shooters = [];

          for (let i = 0; i < 10; i++) {
            shooters.push(function() {
              alert( i ); // выводит свой номер
            });
          }

          return shooters;
        }

        var army = makeArmy();

        army[0](); // 0
        army[5](); // 5    

> Константа const
  
  • Принципы работы const
    - Объявление const задаёт константу.
    - Константу нельзя изменить.
    - Пример:

        const apple = 5;
        apple = 10;       // ошибка  

    - В остальном, const аналогично let.

  • Если в константу присвоен объект
    - То от изменения защищена сама константа.
    - А вот свойства объекта менять можно.
    - Пример:

      const user = {
        name: "Вася"
      };

      user.name = "Петя"; // допустимо
      user = 5;           // нельзя, будет ошибка    

  • Верхний регистр




А3. Деструктуризация






