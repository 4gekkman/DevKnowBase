////==================================================////
////                                                  ////
////                      Vagrant                     ////
////                                                  ////
////==================================================////
////                      ////
////         Ссылки       ////
////                      ////
////======================////


  // Официальные ресурсы //
  //---------------------//

    # Официальный сайт Vagrant
        https://www.vagrantup.com

    # Официальный репозиторий боксов для Vagrant
        https://atlas.hashicorp.com/boxes/search



////==================================================////
////                         ////
////        Оглавление       ////
////                         ////
////=========================////


  # A.  Vagrant

    А1. Что такое Vagrant
    А2. Установка Vagrant
    А3. Вводный инструктаж
    А4. Справочник по CLI
    А5. Работа с Vagrantfile
    А6. Vagrant Share

  # Б.  Рецепты и наработки




////==================================================////
////                         ////
////        Содержание       ////
////                         ////
////=========================////

А1. Что такое Vagrant

  --------------------------------------
  Подоглавление:

    # Ссылки
    # Введение
    # Что такое Vagrant
    # Какая мне польза от Vagrant

  --------------------------------------

  > Ссылки

    # Оф.обзорные статьи про Vagrant
        https://www.vagrantup.com/docs/
        https://www.vagrantup.com/docs/why-vagrant/

  > Введение
    - Это обзорная глава про Vagrant.

  > Что такое Vagrant
    - CLI для управления виртуальными машинами.
    - Позволяет настраивать, воспроизводить и портировать рабочие среды.
    - Работает со следующими провайдерами:

      • VirtualBox
      • VMware
      • AWS
      • любым другим провайдером

    - Работает со следующими инструментами для provisioning:

      • Шелл-скрипты
      • Chef
      • Puppet
      • ...и другие.

    - С помощью последних можно авто-ки устанавливать и настраивать софт на ВМ.

  > Какая мне польза от Vagrant

    • Среда для выполнения Docker
      - Docker работает нативно только на Linux.
      - А я использую в повседневной жизни Windows.
      - Поэтому работать с Docker могу только через ВМ с Linux.
      - Из коробки Docker идёт с Docker Machines на boot2docker.
      - Но этот дистрибутив не поддерживает UTF8, и весьма урезан.
      - Разумнее воспользоваться Vagrant и собрать свой Linux.

    • Среда для локальной разработки
      - Выше я упоминул, что в повседневной жизни использую Windows.
      - А разработку сегодня вести комфортно только на Linux.
      - Поэтому для ведения разработки необходима ВМ с Linux.
      - Нет необходимости на каждый проект создавать отдельную ВМ.
      - Docker Compose позволяет изолировать проекты на 1-й ВМ.

    • Одинаковая локальная среда для всей команды
      - При кооп.разработке можно передать коллегам Vagrantfile.
      - И они получат готовую для разработки среду с Docker.

    • Возможность показывать работы друзьям и клиентам
      - Используя функцию Vagrant Share.


А2. Установка Vagrant

  --------------------------------------
  Подоглавление:

    # Ссылки
    # Введение
    # Установка на Windows

  --------------------------------------

  > Ссылки

    # Оф.статья об установке Vagrant
        https://www.vagrantup.com/docs/installation/

  > Введение
    - В этой главе описана установка Vagrant.

  > Установка на Windows

    1. Перейти на страницу загрузок
      - https://www.vagrantup.com/downloads.html

    2. Скачать версия для Windows
      - Если у тебя 64-разрядная система, то её.

    3. Установить Vagrant
      - Выполнив скачанный файл.


А3. Вводный инструктаж

  --------------------------------------
  Подоглавление:

    # Ссылки
    # Введение

    # Инициация проекта
    # Vagrant-боксы

      • Базовые образы - боксы
      • Репозиторий для боксов
      • Из чего состоит имя бокса
      • Как скачать бокс
      • Применить бокс в Vagrantfile

    # Запуск ВМ и доступ через SSH

      • Запуск ВМ
      • Подключение в ВМ через SSH

    # Общие папки

      • Общие синхронизирующиеся папки
      • Общие папки по умолчанию
      • Настройка общих папок

    # Инициализация бокса (provisioning)

      • Что такое инициализация
      • Когда происходит инициализация
      • Как явно указать не делать инициализацию
      • Пример инициализации с помощью bash-скриптов

    # Работа с сетями

      • Пробрасываемые по умолчанию порты
      • Проброс портов

    # Vagrant Share

      • Регистрация в HashiCorp Atlas и аутентификация
      • Применение Vagrant Share

    # Завершение работы с ВМ

      • Приостановка (suspend)
      • Остановка (halt)
      • Удаление (destroy)

  --------------------------------------

  > Ссылки

    # Оф.раздел документации с вводным инструктажом
        https://www.vagrantup.com/docs/getting-started/

  > Введение
    - Это глава с вводным поверхностным инструктажом по Vagrant.
    - В ней мы пробежимся по всему Vagrant, не вдаваясь в детали.

  > Инициация проекта
    - Итак, ты решил создать новый vagrant-проект.
    - Выбери какую-нибудь папочку, и выполни там:

        vagrant init

    - Vagrant создаст в этой папочке свеженький Vagrantfile.
    - Он наполнен массой комментариев и примеров использования.
    - Зачем нужен Vagrantfile:

      • Пометить корневой каталог vagrant-проекта
        - Многие настройки vagrant относительны этого каталога.

      • Указать бокс и настроить его
        - В нём можно указать, какой бокс использовать на ВМ.
        - Можно установить на него всякие программы.
        - Можно выполнить на нём всякие действия.

  > Vagrant-боксы

    • Базовые образы - боксы
      - Тебе не захочется делать ВМ с нуля, это процесс непростой.
      - Лучше используй уже готовые базовые образы. Их называют "боксами".
      - Новый vagrant-проект всегда начинается с выбора бокса.

    • Репозиторий для боксов
      - У корпорации HashiCorp (разработчика Vagrant) есть репозиторий для боксов.
      - Создатели боксов могут закачивать туда свои боксы.
      - А пользователи могут их оттуда в любое время скачивать.
      - Посмотреть, что имеется в наличии, можно у них на сайте:

          https://atlas.hashicorp.com/boxes/search

    • Из чего состоит имя бокса
      - Оно делится на 2 части: [вендор]/[название].
      - Например: hashicorp/precise64

    • Как скачать бокс
      - Для этого можно использовать команду vagrant box add.
      - Бокс будет скачан и доступен для многократного использования.
      - Например, скачаем бокс "hashicorp/precise64":

          vagrant box add hashicorp/precise64

    • Применить бокс в Vagrantfile
      - Для этого не обязательно самому скачивать бокс.
      - Vagrant сам бы его скачал в случае отсутствия.
      - В Vagrantfile можно указать лишь 1-ин бокс.
      - Например, укажем бокс "hashicorp/precise64":

          Vagrant.configure("2") do |config|
            config.vm.box = "hashicorp/precise64"
          end

  > Запуск ВМ и доступ через SSH

    • Запуск ВМ
      - Запустить ВМ можно командой: vagrant up
      - Её надо выполнить в корне vagrant-проекта или выше по дереву.

    • Подключение в ВМ через SSH
      - Подключиться к ВМ через SSH можно командой: vagrant ssh
      - Её надо выполнить в корне vagrant-проекта или выше по дереву.

  > Общие папки

    • Общие синхронизирующиеся папки
      - Можно синхронизировать указанные папки на гесте и хосте.

    • Общие папки по умолчанию
      - При создании проекта vagrant по умолчанию создаёт 1 общую папку.
      - Это папка проекта на стороне хоста, и папка /Vagrant на стороне геста.

    • Настройка общих папок
      - Читай про это в разделе: "А5. Работа с Vagrantfile".

  > Инициализация бокса (provisioning)

    • Что такое инициализация
      - Автоматическая настройка бокса при первом запуске.
      - Установка пакетов, выполнение различного рода команд.
      - Чтобы после запуска система приобрела желаемый вид.

    • Когда происходит инициализация

      ▪ При первом vagrant up
      ▪ При vagrant up с опцией --provision
      ▪ При vagrant provision на работающей среде
      ▪ При vagrant reload --provision

    • Как явно указать не делать инициализацию
      - С помощью опции --no-provision

    • Пример инициализации с помощью bash-скриптов
      - Положем в корень vagrant-проекта bash-скрипт bootstrap.sh.
      - В нём мы установим nginx в бокс:

          #!/usr/bin/env bash

          apt-get update
          apt-get install -y nginx

      - Затем настроим инициализацию в Vagrantfile.
      - Укажем тип инициализации: shell.
      - Укажем путь к шелл-скрипту относительно корня проекта.
      - Для этого, добавим следующее в Vagrantfile:

          config.vm.provision :shell, path: "bootstrap.sh"

      - Теперь запустим ВМ с помощью: vagrant up
      - В терминале должен отображаться весь вывод от инициализации.
      - После запуска подключимся к ВМ через ssh: vagrant ssh
      - Проверим сервер введя: curl 127.0.0.1

  > Работа с сетями

    • Пробрасываемые по умолчанию порты
      - Vagrant автоматичеси пробрасывает порт 22 на гесте на 2222 на хосте.
      - Это порт для SSH-соединений.

    • Проброс портов
      - Можно пробросить порты между гестом и хостом.
      - Пробросим порт 80 с геста на порт 8080 на хосте.
      - Для этого надо добавить в Vagrantfile следующее:

          config.vm.network :forwarded_port, guest: 80, host: 8080

      - Предполагая, что ВМ с прошлых примеров запущена, перезагрузим её.
      - Для этого выполним: vagrant reload
      - При загрузке машины она выводит список пробрасываемых портов.
      - Теперь стартовая страница nginx д.б. доступна по адресу localhost:8080.

  > Vagrant Share

    • Регистрация в HashiCorp Atlas и аутентификация
      - Для применения Vagrant Share надо зарегистрироваться на их сайте.
      - Создать аккаунт: https://atlas.hashicorp.com/account/new
      - Затем нужно аутентифицироваться через CLI:

          vagrant login

    • Применение Vagrant Share
      - С помощью VS можно сделать ВМ доступной из интернета.
      - На твой сайт на ВМ сможет зайти кто угодно.
      - С помощью VS можно показать свой сайт друзьям или заказчикам.
      - Чтобы запустить VS нужно выполнить:

          vagrant share

      - Запустится демон, и выдаст URL примерно такого вида:

          http://stifling-cony-7190.vagrantshare.com

      - Попробуй с планшета зайти на сайт, и увидишь приветствие nginx.
      - Не пользуйся проброшенными на хост портами, а пользуйся гест-портами.
      - В данном случае, сервер nginx доступен с портом 80.
      - Чтобы закончить сеанс VS, нажми:

          ctrl-c

  > Завершение работы с ВМ

    • Приостановка (suspend)
      - Перевод виртуальной машины в спящий режим.
      - Команды:

          vagrant suspend   | перевести в спящий режим
          vagrant up        | разбудить

    • Остановка (halt)
      - Аккуратно выключить виртуальную машину.
      - Команды:

          vagrant halt      | аккуратно выключить
          vagrant up        | включить

    • Удаление (destroy)
      - Тотальное удаление виртуальной машины.
      - Что произойдёт:

        ▪ Остановка ВМ
        ▪ Удаление всех жёстких дисков ВМ (и данных на них)

      - Команды:

          vagrant destroy   | тотально удалить ВМ
          vagrant up        | создать новую ВМ


А4. Справочник по CLI

  --------------------------------------
  Подоглавление:

    # Ссылки
    # Введение
    # Опция -h
    # Справочник API CLI Vagrant

      - box
      - connect
      - destroy
      - global-status
      - halt
      - init
      - login
      - package
      - plugin
      - port
      - powershell
      - provision
      - rdp
      - reload
      - resume
      - share
      - snapshot
      - ssh
      - ssh-config
      - status
      - suspend
      - up
      - version

  --------------------------------------

  > Ссылки

    # Оф.раздел документации с CLI-справочником
        https://www.vagrantup.com/docs/cli/

  > Введение
    - В этой главе справочник по API CLI Vagrant.
    - Весь API доступен через единую команду vagrant.

  > Опция -h
    - С помощью -h можно получить справку по конкретной команде.
    - Например, справка по команде vagrant init:

        vagrant init -h

  > Справочник API CLI Vagrant

    // box //
    //-----//
    // -


    // connect //
    //---------//
    // -


    // destroy //
    //---------//
    // -


    // global-status //
    //---------------//
    // -


    // halt //
    //------//
    // -


    // init //
    //------//
    // -


    // login //
    //-------//
    // -


    // package //
    //---------//
    // -


    // plugin //
    //--------//
    // -


    // port //
    //------//
    // -


    // powershell //
    //------------//
    // -


    // provision //
    //-----------//
    // -


    // rdp //
    //-----//
    // -


    // reload //
    //--------//
    // -


    // resume //
    //--------//
    // -


    // share //
    //-------//
    // -


    // snapshot //
    //----------//
    // -


    // ssh //
    //-----//
    // -


    // ssh-config //
    //------------//
    // -


    // status //
    //--------//
    // -


    // suspend //
    //---------//
    // -


    // up //
    //----//
    // -


    // version //
    //---------//
    // -



А5. Работа с Vagrantfile

  --------------------------------------
  Подоглавление:

    # Ссылки
    # Введение

  --------------------------------------

  > Ссылки

    # Оф.раздел документации про Vagrantfile
        https://www.vagrantup.com/docs/vagrantfile/

    # Оф.раздел документации про общие папки
        https://www.vagrantup.com/docs/synced-folders/

    # Оф.раздел документации про сетевые аспекты
        https://www.vagrantup.com/docs/synced-folders/

    # Оф.раздел документации про provisioning
        https://www.vagrantup.com/docs/provisioning/

  > Введение
    -


А6. Vagrant Share

  --------------------------------------
  Подоглавление:

    # Ссылки
    # Введение

  --------------------------------------

  > Ссылки

    # Оф.раздел документации про Vagrant Share
        https://www.vagrantup.com/docs/share/

  > Введение
    -







