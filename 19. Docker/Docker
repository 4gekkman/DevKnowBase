////==================================================////
////                                                  ////
////                      Docker                      ////
////                                                  ////
////==================================================////
////                      ////
////         Ссылки       ////
////                      ////
////======================////


  // Официальные ресурсы //
  //---------------------//

    # Официальный сайт Docker
        https://www.docker.com/

    # Оф.панель управления и хаб Docker
        https://hub.docker.com/

    # Серия оф.вводных видео-тренингов по Docker
        https://training.docker.com/self-paced-training

    # Официальная документация Docker
        https://docs.docker.com/

  // Видео //
  //-------//

    # Плейлист от LearnCode по базовым принципам Docker
        https://www.youtube.com/playlist?list=PLoYCgNOIyGAAzevEST2qm2Xbe3aeLFvLc

  // Текст //
  //-------//

    # 350+ полезных статей про Docker
        https://habrahabr.ru/company/1cloud/blog/275015/

    # Docker for PHP Developers
    # - Efficient Nginx, PHP, and MySQL development environments with Docker
    # - Подробнейшая, потрясающая статья про Docker from JOSH LOCKHART
        http://www.newmediacampaigns.com/blog/docker-for-php-developers

    # Laravel 5 with dockerized Gulp, PHP-FPM, MySQL and nginx
    # Краткий how-to
        http://harshjv.github.io/blog/laravel-5-with-dockerized-gulp-php-fpm-mysql-and-nginx/


////==================================================////
////                         ////
////        Оглавление       ////
////                         ////
////=========================////


  # А.  Docker

    А1. Архитектура Docker

  # Б.  Рецепты и наработки

    Б1. ...







////==================================================////
////                         ////
////        Содержание       ////
////                         ////
////=========================////


А1. Архитектура Docker

  --------------------------------------
  Подоглавление:

    # Ссылки
    # Введение

    # Что такое Docker

      - Вводная информация
      - Изолированные контейнеры

    # Как можно использовать Docker

      - Быстрая разработка приложений
      - Лёгкое разворачивание и масштабирование
      - Более эффективное использование серверного железа

  --------------------------------------

  > Ссылки

    # Оф.статья "Understand the architecture"
        https://docs.docker.com/engine/understanding-docker/

  > Введение
    - В этой главе описана архитектура Docker.
    - Её прочтение должно сформировать чёткое представление об оной.

  > Что такое Docker

    # Вводная информация
      - Открытая платформа для разработки, доставки и запуска приложений.
      - Он позволяет отделить приложение от инфраструктуры.
      - И рассматривать последнюю, как управляемое отдельное приложение.
      - Docker сокращает цикл между написанием/использованием кода,
        и позволяет быстрее:

          # Разрабатывать
          # Тестировать
          # Разворачивать

      - Что позволяет Docker'у обеспечивать подобные преимущества:

          # Использование технологий контейнеризации ядра Linux
          # Наличие инструментов ускорения рабочего процесса, позволяющих
            удобно и быстро управлять приложением, и разворачивать его

    # Изолированные контейнеры
      - Docker позволяет запускать почти любое приложение в контейнере.
      - При этом приложение надёжно изолировано от других контейнеров.
      - Изоляция и безопасность позволяют запускать N контейнеров на 1 хосте.
      - Контейнеры же очень легковесны, ведь они не отягощены гипервизорами.
      - Легковесность контейнеров позволяют получать больше от серверного железа.
      - Примеры того, для чего можно использовать контейнеры:

          # Размещать в них приложения/компоненты
          # Передавать контейнеры членам команды для дальнейшей разработки/тестирования
          # Разворачивать приложения на продакшн-серверах: в датацентрах/облаках

  > Как можно использовать Docker

    # Быстрая разработка приложений
      -

    # Лёгкое разворачивание и масштабирование
      -

    # Более эффективное использование серверного железа
      - 



