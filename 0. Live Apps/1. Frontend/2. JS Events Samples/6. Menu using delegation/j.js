/**
 * Задача:
 *
 * > 	Сделать из списка ul меню.
 * > 	В каждом из его li лежит элемент-ссылка 'A'.
 * > 	При нажатии на элемент 'A' каждой из кнопок li в консоль должно выводитсья
 * 		выводится значение href из этого 'A'.
 * > 	В этой демонстрационной задаче действие браузера "по умолчанию" при
 * 		нажатии на элемент-ссылку 'A' - т.е. переход на другую страницу -
 * 		следует отменить.
 *
 *
 * Используемая техника:
 *
 * > 	Делегирование событий. Обработчик события onclick вешается на элемент,
 * 		который является родителем для всех кнопок меню. Т.О. при нажании на
 * 		любую из кнопок событие всплывает в их общий элемент-родитель, где
 * 		нам достаточно повесить 1 функцию-перехватчик события, чтобы его обработать.
 * > 	В обработчике можно получить ссылку на целевой элемент, в котором
 * 		сработало событие - т.е. узнать, на какую кнопку нажали. И в зависимости
 * 		от этого произвести обработку этого события.
 * >	Эта техника позволяет избежать назначения своей функции-обработчика для
 * 		каждой из кнопок, которых может быть очень много, и Т.О. позволяет
 * 		не писать много лишнего кода.
 *
 *
 * Архитектура решения:
 *
 * 1. Повесить 1 общий обработчик события click на ul
 * 2. В обработчике из п.1 кроссбраузерно получить ссылку на целевой элемент,
 * 		на котором сработало событие.
 * 3. Проверить, является ли имя тега полученного целевого элемента = 'A'.
 * 		- Если нет, значит клик был совершен не по кнопке, а просто где-то
 * 			по понели меню, и такой клик нас не интересует. Завершить работу
 * 			обработчика.
 *		- Если да, то вывести в консоль значение атрибута href
 * 4. Отменить действие браузера по умолчанию в ответ на событие
 * 		click по элементу с тегом 'A'
 *
 *
 */

var ul,
		href;


// 1. Повесить 1 общий обработчик события click на ul
ul = document.getElementById('menu');
ul.onclick = function(event) {

	// Кроссбраузерно получить событие
	event = event || window.event;

	// 2. Кроссбраузерно получить target-элемент
	var target = 	event && event.target ||
								event.srcElement;

  // 3. проверим, интересует ли нас этот клик?

		// если клик был не на ссылке, то нет
		if (target.tagName != 'A') return;

		// если клик был по ссылке, то обработать его
		href = target.getAttribute('href');
		console.log(href);

	//4. Отменить действие браузера по умолчанию в ответ на событие
	//		click по элементу с тегом 'A'

		// Кроссбраузерно отменить действия браузера "по умолчанию" в ответ
		// на возникновение события:
		event.preventDefault ? event.preventDefault() :
													(event.returnValue=false);



};
