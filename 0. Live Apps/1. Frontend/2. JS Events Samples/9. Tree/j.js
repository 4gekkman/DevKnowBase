/**
 * Задача:
 *
 * > Изначально имеется ul-элемент с дочерними li-элементами. В его li
 * 	могут быть также вложенные ul-элементы. Может быть сколько угодно
 * 	уровней вложенности.
 *
 * > Надо сделать так, чтобы по клику на заголовок любого дерева -
 * 	показывались/скрывались его дети. Т.Е. стандартное информационное
 *
 * > Требования:
 * 		- Использовать делегирование
 * 		- Клик вне текста заголовка (на пустом месте) ничего делать не должен.
 * 		- При наведении курсора на заголовок - он становится жирным, реализовать
 * 			через CSS.
 * 		- При двойном клике на заголовке, его текст не выделяется
 *
 * > Примечание:
 * 	Заголовок каждой ветки дерева должен быть изначально обернут в span,
 * 	чтобы дерево раскрывалось именно при клике по заголовку - элементу span,
 * 	а не при клике по блочному элементу li, который растянут обычно на всю ширину
 * 	страницы.
 *
 *
 *
 * Архитектура решения:
 *
 * 1. Позаботиться о том, чтобы заголовок каждой ветки дерева ul был обернут
 * 		в элемент span. Желательно, чтобы входящий ul изначально был оформлен
 * 		таким образом.
 *
 * 2. Назначить 1 обработчик событий onclick для корневого элемента ul
 * 		дерева. Тогда любое событие click, произошедшее в этом элементе ul
 * 		всплывет и будет перехвачено этой функцией-перехватчиком события.
 *
 * 3. Кроссбраузерно получить ссылки на объект-событие event, а также
 * 		на целевой объект target, в котором изначально произошло событие.
 *
 * 4. Если имя тега элемента target, найденного в п.3, не SPAN, то завершить
 *		работу функции-обработчика.
 *
 * 5. Получить ссылку на элемент li, в котором произошло событие click.
 * 		> Это будет родительский элемент для элемента span, в котором произошло
 * 			событие.
 *
 * 6. Получить ссылку на 1-й дочерний для li из п.5 элемент ul - этот элемент
 * 		олицетворяет как раз ту ветку дерева, которую нужно скрывать/показывать
 * 		при клике на заголовок данной ветки.
 * 		> Если такого не найдено, то закончить работу функции-обработчика.
 *
 * 7. Спрятать/показать найденный в п.6 элемент ul и всех его детей.
 * 		> Если он в настоящее время спрятан, то показать. Если показан - спрятать.
 *
 * 8. Сделать текст во всем дереве не выделяющимся при двойном клике.
 *
 *
 *
 */


// Задействованные переменные

var rootUL,		// ссылка на корневой элемент дерева
		target,		// ссылка на целевой элемент, в котором изначально возникло событие click
		liWhereClickOccured,		// ссылка на эл-т LI - родитель эл-та SPAN, в котором изначально возникло событие click
		ULtoHideShow,						// ссылка на ту ветку дерева, которую нужно показать/скрыть
		unselectableText; // содержит функцию-обработчик, которая делает текст в элементе невыделяемым

//2. 	Назначить 1 обработчик событий onclick для корневого элемента ul
//		дерева. Тогда любое событие click, произошедшее в этом элементе ul
//		всплывет и будет перехвачено этой функцией-перехватчиком события.
rootUL = document.getElementById('tree');
rootUL.onclick = function(event) {


	//3. 	Кроссбраузерно получить ссылки на объект-событие event, а также
	//		на целевой объект target, в котором изначально произошло событие.

		// Кроссбраузерно получить событие
		event = event || window.event;

		// Кроссбраузерно получить target-элемент
		target = 	event && event.target ||
									event.srcElement;



	//4. 	Если имя тега элемента target, найденного в п.4, не SPAN, то завершить
	// 		работу функции-обработчика.
	if(target.tagName !== 'SPAN') return;



	//5. 	Получить ссылку на элемент li, в котором произошло событие click.
	//		> Это будет родительский элемент для элемента span, в котором произошло
	//			событие.
	liWhereClickOccured = target.parentNode;



	//6. 	Получить ссылку на 1-й дочерний для li из п.5 элемент ul - этот элемент
	//		олицетворяет как раз ту ветку дерева, которую нужно скрывать/показывать
	//		при клике на заголовок данной ветки.
	//		> Если такого не найдено, то закончить работу функции-обработчика.
	ULtoHideShow = liWhereClickOccured.getElementsByTagName('ul')[0];
	if(!ULtoHideShow) return;



	//7. 	Спрятать/показать найденный в п.6 элемент ul и всех его детей.
	//		> Если он в настоящее время спрятан, то показать. Если показан - спрятать.
	ULtoHideShow.style.display = ULtoHideShow.style.display ? '' : 'none';


};



//8. Сделать текст во всем дереве не выделяющимся при двойном клике.
	unselectableText = function(event) {
		// Кроссбраузерно получить объект-событие
		event = event || window.event

		// Кроссбраузерно отменить действия браузера "по умолчанию" в ответ
		// на возникновение события:
		event.preventDefault ? event.preventDefault() :
													(event.returnValue=false);
	};
	rootUL.onmousedown = unselectableText;
	rootUL.onselectstart = unselectableText;







