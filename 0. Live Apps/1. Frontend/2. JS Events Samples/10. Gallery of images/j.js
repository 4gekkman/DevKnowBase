/**
 * Задача:
 *
 * > Создать галерею, в которой основное изображение изменяется при клике
 * 	на уменьшенный вариант.
 *
 * > При обработке событий использовать не более 1 функции-обработчика на всю
 * 	галерею
 *
 *
 *
 * Архитектура решения:
 *
 * 1. Для элемента div - родитяля для всех img с уменьшенными вариантоми
 * 		изображений - назначить обработчик события onclick. Этот обработчик
 * 		будет перехватывать все события click по уменьшенным вариантам.
 *
 * 2. Кроссбраузерно получить ссылки на объект-событие event, а также
 * 		на целевой объект target, в котором изначально произошло событие.
 *
 * 3. Если имя тега элемента target, найденного в п.2, не IMG, то
 * 		завершить работу функции-обработчика.
 *
 * 4. Если target это IMG, то извлечь из его родителя - элемента A -
 * 		значение атрибута href, и вставить его в атрибут src большой картинки.
 *
 * 5. Отменить действия браузера "по умолчанию" в ответ на событие click,
 *		пойманное функцией-перехватчиком в галерее уменьшенных изображений
 *		при клике по img.
 *
 * 6. Организовать предзагрузку картинок из галереи - чтобы пользователю
 * 		не приходилось ждать, когда он кликнет по уменьшенной копии, пока
 * 	  большая картинка загрузится, лучше из "предзагрузить".
 *
 *
 */

// Задействованные в решении переменные

var gallery,		// ссылка на div - родитель всех img с уменьшенными вариантами картинок
		bigImg,			// ссылка на img, в которой отображается большая картинка
		imagesFromGallery;		// NodeList со всеми картинками из галереи

//1. 	Для элемента div - родитяля для всех img с уменьшенными вариантоми
//		изображений - назначить обработчик события onclick. Этот обработчик
//		будет перехватывать все события click по уменьшенным вариантам.
gallery = document.getElementById('thumbs');
gallery.onclick = function(event) {



	//2. 	Кроссбраузерно получить ссылки на объект-событие event, а также
	//		на целевой объект target, в котором изначально произошло событие.

		// Кроссбраузерно получить событие
		event = event || window.event;

		// Кроссбраузерно получить target-элемент
		target = 	event && event.target ||
									event.srcElement;


	//3. 	Если имя тега элемента target, найденного в п.4, не IMG, то завершить
	// 		работу функции-обработчика.
	if(target.tagName !== 'IMG') return;



	//4. Если target это IMG, то извлечь из его родителя - элемента A -
	//		значение атрибута href, и вставить его в атрибут src большой картинки.
	bigImg = document.getElementById('largeImg');
	bigImg.src = target.parentNode.getAttribute('href');
	bigImg.alt = target.parentNode.getAttribute('title');


	//5. Отменить действия браузера "по умолчанию" в ответ на событие click,
	//		пойманное функцией-перехватчиком в галерее уменьшенных изображений
	//		при клике по img.

		// Кроссбраузерно отменить действия браузера "по умолчанию" в ответ
		// на возникновение события:
		event.preventDefault ? event.preventDefault() :
													(event.returnValue=false);


};



//6. Организовать предзагрузку картинок из галереи - чтобы пользователю
//		не приходилось ждать, когда он кликнет по уменьшенной копии, пока
//	  большая картинка загрузится, лучше из "предзагрузить".
imagesFromGallery = gallery.getElementsByTagName('img');
for(var i=imagesFromGallery.length-1; i>=0; i--) {

	// Получить url родительского для текущего IMG элемента A
	var url = imagesFromGallery[i].parentNode.href;

	// Чтобы браузер начал загружать картинку, надо создать элемент IMG
	// и присвоить его атрибуту src значение.
  var img = document.createElement('img');
  img.src = url;

}




