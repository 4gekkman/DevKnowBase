////=============================================////
////                                             ////
////                      D3                     ////
////                                             ////
////=============================================////
////                      ////
////         Ссылки       ////
////                      ////
////======================////


  // Официальные ресурсы D3 //
  //------------------------//  

    # Официальный репозиторий D3 на github
        https://github.com/mbostock-bower/d3-bower

    # Официальный сайт D3
        https://d3js.org/

    # Официальная документация (wiki) для D3 (D3 v3.*)
        https://github.com/d3/d3/wiki

    # Официальная документация (wiki) для D3 (D3 v4.*)
        https://github.com/d3/d3/blob/master/README.md#api-reference

    # Официальная галерея примеров для D3
        https://github.com/d3/d3/wiki/Gallery    

    # Модули D3
        https://github.com/d3

  // Компоненты и плагины D3 //
  //-------------------------// 

    # Компоненты
        https://github.com/d3/d3/wiki/API-Reference

    # Плагины
        https://github.com/d3/d3-plugins


////==================================================////
////                         ////
////        Оглавление       ////
////                         ////
////=========================////

  # A. Справочник по модулям D3

    A1. Selections

  # В. Теория, практика/наработки

    Б1. Основы D3.js


////==================================================////
////                         ////
////        Содержание       ////
////                         ////
////=========================////


А1. Selections

--------------------------------------
Подоглавление:

  # Ссылки
  # Введение
  # Справочник

    • Selecting Elements

      ▪ d3.selection        | Выбрать корневой DOM-элемент (document.documentElement)
      ▪ d3.select           | Выбрать 1-ин эл-т по ссылке или 1-й по списку по селектору
      ▪ d3.selectAll        | Выбрать все эл-ты по массиву ссылок или по селектору
      ▪ selection.select    | Для каждого эл-та в selection выбрать 1-й по списку указанный эл-т по селектору, или по анонимной функции
      ▪ selection.selectAll | Для каждого эл-та в selection выбрать все эл-ты по селектору, или по анонимной функции
      ▪ selection.filter    | 
      ▪ selection.merge     | 
      ▪ d3.matcher          | 
      ▪ d3.selector         | 
      ▪ d3.selectorAll      | 
      ▪ d3.window           | 

    • Modifying Elements

      ▪ d3.window           | 
      ▪ selection.classed   | 
      ▪ selection.style     | 
      ▪ selection.property  | 
      ▪ selection.text      | 
      ▪ selection.html      | 
      ▪ selection.append    | 
      ▪ selection.insert    | 
      ▪ selection.remove    | 
      ▪ selection.sort      | 
      ▪ selection.order     | 
      ▪ selection.raise     | 
      ▪ selection.lower     | 
      ▪ d3.creator          | 

    • Joining Data

      ▪ selection.data      | 
      ▪ selection.enter     | 
      ▪ selection.exit      | 
      ▪ selection.datum     | 

    • Handling Events

      ▪ selection.on        |     
      ▪ selection.dispatch  |   
      ▪ d3.event            | 
      ▪ d3.customEvent      | 
      ▪ d3.mouse            | 
      ▪ d3.touch            | 
      ▪ d3.touches          | 

    • Control Flow

      ▪ selection.each      |            
      ▪ selection.call      |     
      ▪ selection.empty     |     
      ▪ selection.nodes     |     
      ▪ selection.node      |     
      ▪ selection.size      |     

    • Local Variables

      ▪ d3.local            |               
      ▪ local.set           |   
      ▪ local.get           |   
      ▪ local.remove        |       
      ▪ local.toString      |         

    • Namespaces

      ▪ d3.namespace        | 
      ▪ d3.namespaces       | 

--------------------------------------

> Ссылки

  # Ссылка на соотв.раздел документации D3 v4.*
      https://github.com/d3/d3/blob/master/README.md#selections-d3-selection

> Ведение
  - Это справочник по модулю Selections библиотеки D3 v4.*.

> Справочник




Б1. Основы D3.js

--------------------------------------
Подоглавление:

  # Ссылки
  # Введение

  # Введение в D3: это JS-библиотека
  # Введение в D3: html + css + svg
  # Введение в D3: главной целью является визуализация данных
  # Введение в D3: кроссбраузерность, поддержка всеми кроме IE<=8

  # Основы D3: привязка произвольных данных к DOM
  # Основы D3: это не швейцарский нож, а направленный инструмент
  # Основы D3: повторное использование кода через компоненты и плагины
  # Основы D3: выборки
  # Основы D3: динамический свойства
  # Основы D3: enter & exit
  # Основы D3: transitions

--------------------------------------

> Ссылки

> Введение
  - Цель этой главы сформировать общее представление о d3.
  - Получить цельную, общую картину мелким планом без лишних деталей.

> Введение в D3: это JS-библиотека
  - D3.js является js-библиотекой.
  - Используется для манипулирования документами на основе данных.
  - То есть, берутся какие-то элементы из DOM, и с ними проводятся манипуляции.

> Введение в D3: html + css + svg
  - Под капотом D3 использует html, css и svg.
  - Таким образом, D3 и canvas не имеют ничего общего.

> Введение в D3: главной целью является визуализация данных
  - D3 создана для удобной визуализации данных.

> Введение в D3: кроссбраузерность, поддержка всеми кроме IE<=8
  - Библиотека D3 является кроссбраузерной.
  - D3 поддерживается всеми современными браузерами.
  - D3 не поддерживается IE8 и ниже.

> Основы D3: привязка произвольных данных к DOM
  - В HTML есть понятие Document Object Model (DOM).
  - По сути, это структура документа, стстоящая из элементов.
  - D3 позволяет привязывать произвольные данные к элементам DOM.
  - Например, можно сгенерировать таблицу из массива чисел.
  - Или, например, создать бар-график на основе тех же данных.

> Основы D3: это не швейцарский нож, а направленный инструмент
  - D3 не является монолитным фреймворком, стремящемся решать все проблемы.
  - Он заточен лишь для решения 1-й задачи: 

      Эффективная манипуляция документами на основе данных.

  - Благодаря этому, D3 работает чрезвычайно быстро.
  - И может работать даже с огромными массивами данных.
  - Поддерживает динамическиеизменения и анимацию.

> Основы D3: повторное использование кода через компоненты и плагины
  - В D3 продумана тема повторного использования кода.
  - Ссылки на репозитории с ними см.в ссылках этого документа.

> Основы D3: выборки
  - Это типа D3-коллекций DOM-элементов.
  - С которыми потом с помощью D3 можно производить манипуляции.
  - Например, изменим "color" всех DOM-элементов p на "white":

      d3.selectAll("p").style("color", "white");

  - Получять эти коллекции можно, используя различные признаки.
  - Включая class, id, значения атрибутов, содержание.

> Основы D3: динамический свойства
  - Стили, атрибуты и прочие св-ва в D3 могут быть функциями.
  - Это даёт широкие возможности, и позволяет заготавливать эти функции.
  - В D3 есть множество подобного рода заготовленных функций.
  - Например, раскрасим случайным образом все DOM-элементы p:

      d3.selectAll("p").style("color", function() {
        return "hsl(" + Math.random() * 360 + ",100%,50%)";
      });  

> Основы D3: привязка данных к выборкам
  - К выборке можно привязать данные.
  - Чтобы потом на основе этих данных модифицировать выборку.
  - Однажды привязав данные, повторно можно их не привязывать.
  - Например, при обновлении выборки этого делать уже не обязательно.
  - Пример:

      d3.selectAll("p")
          .data([4, 8, 15, 16, 23, 42])
          .style("font-size", function(d) { return d + "px"; });  

> Основы D3: enter & exit
  - В D3 есть так называемые enter и exit выборки.
  - С их помощью можно создавать новые узлы для входящих данных.
  - И удалять старые узлы, которые больше не нужны.
  - Итак, домустим у нас есть данные, привязанные к выборке.
  - Каждый элемент в массиве данных связан с соотв.узлом из выборки.
  - Если узлов меньше, чем данных, то лишние эл-ты попадают в выборку enter.
  - Которую можно инициировать, добавив туда элементов. Пример:

      d3.select("body").selectAll("p")
        .data([4, 8, 15, 16, 23, 42])
        .enter()
        .append("p")
        .text(function(d) { return "I’m number " + d + "!"; });  

  - Если забыть об enter/exit элементах, то при работе с выборками будут 
    учитываться лишь те элементы, для которых есть данные.
  - Общим паттерном является разбить изначальную выборку на 3 части:

      ▪ Updating nodes
      ▪ Entering nodes to add
      ▪ Exiting nodes to remove

  - Пример:

        // Update…
        var p = d3.select("body").selectAll("p")
            .data([4, 8, 15, 16, 23, 42])
            .text(function(d) { return d; });

        // Enter…
        p.enter().append("p")
            .text(function(d) { return d; });

        // Exit…
        p.exit().remove();  

> Основы D3: transitions
  - D3 имеет встроенный функционал переходов (transitions) из CSS3.
  - Так что при изменении данных всё может плавно изменяться.
  - Это приминимо как к примитивным, так и к составным значениям.
  - Например, можно плавно изменить цвет фона документа на чёрный:

      d3.select("body").transition()
          .style("background-color", "black");  





