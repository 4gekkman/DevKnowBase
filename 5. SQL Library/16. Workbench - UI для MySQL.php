<?php
/* --------------------------------------------------
---------------- О Г Л А В Л Е Н И Е ----------------
16. Workbench - UI для MySQL


  >




-------------------------------------------------- */












/* --------------------------------------------------
---------------- И Н Ф О Р М А Ц И Я ----------------


Ссылки:

  > Руководство по MySQL Workbench на официальном сайте:
      http://dev.mysql.com/doc/workbench/en/

  > Скачать MySQL Workbench можно с официального сайта с этой страницы:
      http://dev.mysql.com/downloads/tools/workbench/

  > Сайт официального сообщества MySQL Workbench:
      http://mysqlworkbench.org/

  > Видео-руководство от сообщества, за ~14 минут описывающее Workbench:
      http://mysqlworkbench.org/about/about-tutorials/


*****************************************************
Оглавление:

  > Введение
    > Что такое MySQL Workbench?
    > Какие версии сервера MySQL поддерживает Workbench?
    > MySQL Workbench обладает функциюнальностью для работы по следующим 5 основным направлениям
    > Платная и бесплатная версии MySQL Workbench

  > Установка на Windows
    > Требования к системе и программной среде.
    > Установка на Windows возможно 2-мя способами
    > Общая краткая инструкция по установке
    > Первоначальная настройка

  > Администрирование сервера
    > Настройка конфигурационного файла в Workbench
    > Просмотр логов для текущего подключенного сервера MySQL
    > Включение / Выключение текущего подключенного сервера MySQL
    > Просмотр и изменение системных переменных
    > Настройка пользовательских аккаунтов сервера MySQL

  > Редактор SQL и управление структурой и содержанием объектов данных
    > Иконки быстрого доступа под главным меню
    > Редактор SQL
    > Окно "SQL Additions" - подсказки и заготовленные SQL-выражения (snippets)
    > Окно "Schemas" и действия в нем
    > Окно "Information"
    > Добавление, редактирование, удаление данных в таблицах
    > Импорт / Экспорт данных

  > Работа с моделями.
    > Общая информация
    > Блок, посвященный моделям, на главной (черной) странице.
    > Меню по работе с моделями
      > Общая информация
      > Как сохранить / загрузить модель в файл / из файла.
      > Подробнее о блоке Model Overview
    > Меню по работе с диаграммами - редактор моделей
      > Общая информация
      > Работа с внешними ключами (Foreign Keys)
      > Как автоматически выровнять объекты на схеме

  > Форвард и реверс инжениринг. Синхронизация модели и БД.
    > Реверс инжениринг
    > Форвард инжениринг и синхронизация
      > Общая информация
      > Форвард инжениринг с помощью SQL Script
      > Форвард инжениринг в реальную базу данных
      > Синхронизация модели и реальной базы
      > Сравнение и получение отчета о разнице между моделью и реальной базой





*****************************************************



> Введение

  > Что такое MySQL Workbench?
    > MySQL Workbench обеспечивает графический интерфейс для работы с серверами MySQL и
      базами данных. Представляет собой программу, написанную, по всей видимости, на C++.
      Устанавливается в операционную систему Windows или иную.

  > Какие версии сервера MySQL поддерживает Workbench?
    > Он полностью поддерживает MySQL >= 5.1. Также он совместим с MySQL 5.0, но не все
      функции тогда будут работать. Он вообще не поддерживает версии MySQL < 5.0.

  > MySQL Workbench обладает функциональностью для работы по следующим 5 основным направлениям:
    > SQL-Разработка
      > Позволяет создавать и настраивать подключения к серверу MySQL.
      > Позволяет отправлять SQL-запросы к подключенному серверу, используя встроенный SQL-редактор.
    > Моделирование Данных
      > Позволяет создавать модель базы данных графически.
      > Позволяет осуществлять реферс- и форвард- ининиринг между моделью и реальной БД.
      > Настраивать все аспекты базы данных с помощью комплексного Редактора Таблиц. Последний
        имеет легкие в использовании средства для редактирования таблиц, колонок, индексов,
        триггеров, разбиения, опций, вставок, привилегий, скриптов и представлений.
    > Администрирование Сервера
      > Позволяет создавать и настраивать сервер MySQL.
    > Миграция Данных
      > Позволяет осуществлять миграцию данных в MySQL с Microsoft SQL Server, Synbase ASE, SQLite,
        SQL Anywhere, PostreSQL и из таблиц, объектов и данных других СУБД. Миграция также
        может быть организована из таблиц ранних версий MySQL в таблицы последних релизов MySQL.
    > Возможности MySQL Enterprise
      > Поддержка Enterprise продуктов, таких как MySQL Enterprise Backup и MySQL Audit.

  > Платная и бесплатная версии MySQL Workbench
    > Версии:
      > Commercial Edition - платная версия, имеет дополнительную функциюнальность по сравнению
        с бесплатной.
      > Community Edition - бесплатная версия.
    > Сравнение бесплатной и платных версий доступно по ссылке:
        http://www.mysql.com/products/workbench/features.html


> Установка на Windows

  > Требования к системе и программной среде.
    > К системе:
      - CPU: 32-bit or 64-bit
      - Cores: Single (Single Core 3GHz or higher, Dual Core 2GHz or higher recommended)
      - RAM: 4 GB (6 GB or higher recommended)
      - Graphic Accelerators: nVidia or ATI with support of OpenGL 2 or higher
      - Display Resolution: 1280×1024 minimum (1920×1200 or higher recommended)
    > К программной среде (для Windows):
      - Microsoft Windows 7 (32-bit/64-bit) or greater
      - Microsoft .NET 4.0 Framework
      - Microsoft Visual C++ 2010 Redistributable Package (x86)

  > Установка на Windows возможно 2-мя способами:
    > Через windows-установщик.
    > Вручную из zip-файла.

  > Общая краткая инструкция по установке.
    1. Скачать последнюю версию Workbench с официального сайта по ссылке ниже:
        http://dev.mysql.com/downloads/tools/workbench/
      > Либо это будет windows-установщик.
      > Либо zip-файл.
    2a. Если это был windows-установщик, то просто запустить его и установить программу.
    2b. Если это был zip-файл, то просто распаковать содержимое в любую папку, и с этого
        момента программой можно пользоваться (т.е. она не требует установки).

  > Первоначальная настройка
    > Настройка соединения
      1. Запустить приложение MySQL Workbench.
      2. Слева сверху надпись "MySQL Connections". Чтобы создать новое соединение, нажать
         на маленький плюсик справа от этой надписи.
         > В открывшемся окне можно произвести первоначальную настройку.
         > Особое внимание следует обратить на правильное указание номера порта, через который
           работает сервер MySQL, к которому требуется подключиться, на вкладке "Parameters".
           > Порт, через который работает сервер MySQL, не подключаясь к нему, можно посмотреть
             в его конфигурационном файле my.ini. А если подключение к серверу уже есть, то можно
             получить номер порта в ответ на такой запрос:   SHOW VARIABLES LIKE '%port%';
         > На вкладке "Connection" можно настроить SSL.
         > На вкладке "Remote Management" можно настроить управление не локальным, а удаленным
           сервером MySQL (например, который находится на хостинге).
      3. Если на главной странице Workbench нажать не на плюсик (чтобы создать новое соединение),
         а на ключик справа от него, то появится окно, где можно настроить все ранее созданные
         соединения. Причем здесь будут такие настройки, которых не было при создании.
         > На вкладке "System Profile":
           > "Configuration File" - указать путь к конфигурационному файлу сервера MySQL.
           > "Windows Service Name" - указань название службы windows сервера.
           > "System Type" - указать название операционной системы, в которой запущен сервер.

    > Настройка импорта и экспорта данных
      > А именно, требуется указать путь к утилите mysqldump, с помощью которо можно делать
        дампы; а также к папке, в которую Workbench будет эти дампы сохранять.
        > Небольшая справка об утилите mysqldump. Она позволяет делать логические бэкапы -
          т.е. генерирует такие SQL выражения, выполнив которые можно воспроизвести исходную
          схему объекта и/или его данные.
      > Инструкция по настройке:
        1. Зайти в настроенное подключение к серверу MySQl (2 раза щелкнуть по нему).
        2. Edit -> Preferences -> Administrator
        3. Настроить соответствующие пути.


> Администрирование сервера

  > Настройка конфигурационного файла в Workbench
    > Чтобы его можно было настроить, сначала надо указать для данного соединения путь к
      конфигурационному файлу от сервера MySQL, к которому организовано это содеинение.
      Как это сделать, описано выше: "Установка на Windows -> Первоначальная настройка".
    > Чтобы его настроить через Workbench надо пройти по следующему пути:
        На главной странице зайти 2хЩелкнуть по требуемуему соединению ->
        окно "Navigator" -> Instance -> Options File

  > Просмотр логов для текущего подключенного сервера MySQL
    > Чтобы просмотреть логи сервера, нужно пройти по следующему пути:
        На главной странице зайти 2хЩелкнуть по требуемуему соединению ->
        окно "Navigator" -> Instance -> Server Logs

  > Включение / Выключение текущего подключенного сервера MySQL
    > Чтобы включить / выключить сервер MySQL, к которому осуществлено текущее
      подключение, надо пройти по следующему пути:
        На главной странице зайти 2хЩелкнуть по требуемуему соединению ->
        окно "Navigator" -> Instance -> Startup / Shutdown

  > Просмотр и изменение системных переменных
    > Workbench позволяет просматривать и измениять значения системных переменных с помощью
      удобного интерфейса.
    > Как войти в меню просмотра и изменения системных переменных:
        Объединенное меню Workbench -> Окно Navigator -> Status and System Variables.

  > Настройка пользовательских аккаунтов сервера MySQL
    > Workbench позволяет создавать и изменять пользовательские аккаунты на сервере MySQL,
      к которому он подключен, с помощью удобного интерфейса.
    > Как войти в меню просмотра и изменения системных переменных:
        Объединенное меню Workbench -> Окно Navigator -> Users and Privileges

> Редактор SQL и управление структурой и содержанием объектов данных

  > Иконки быстрого доступа под главным меню
    > Если зайти в подключение  - на главной странице зайти 2хЩелкнуть по
      требуемуему соединению - то можно зайти в объединенное меню Workbench.
    > В этом меню сверку (под главным меню) есть иконки быстрого доступа,
      они позволяют делать следующее:
      - Создать новую вкладку SQL-редактора, в ней можно писать и выполнять код.
      - Создать новую вкладку из текстового файла с SQL-скриптом (загрузить в нее его содержимое)
      - Открыть инспектор баз данных выбранной в окне "SCHEMAS" базы данных:
        > Инспектор в одном месте показывает для выбранной базы данных информацию обо всех ее:
          таблицах, колонках, индексах, триггерах, представлениях, сохраняемых процедурах и
          функциях, событиях.
        > Очень удобен, чтобы быстро посмотреть, что там есть в этой базе данных.
      - Создать новую БД
      - Создать новую таблицу (в выбранной по умолчанию БД)
      - Создать новое представление
      - Создать новую сохраняемую процедуру
      - Создать новую сохраняемую функцию
      - Поиск данных в выделенной в окне "SCHEMAS" базе данных
      - Обновить подключение

  > Редактор SQL
    > Вкладка редактора всегда доступна в объединеном меню Workbench.
    > Создать новую вкладку SQL-редактора можно, как описано выше.
    > Фишка редактора SQL - можно вставить туда не отформатированный SQL-код, нажать на
      кнопочку в инструментах редактора (над ним), и произойдет автоформатирование кода
      в соответствии с принятыми соглашениями, так что он станет легко читаем. Эта кнопочка
      похожа на щетку или веник.
    > В редакторе можно выполнять как только одно выделенное выражение, или выражение над которым
      навис курсор, так и все выражения сразу.

  > Окно "SQL Additions" - подсказки и заготовленные SQL-выражения (snippets)
    > В окне "SQL Additions" - справа от центрального окна объединенного меню Workbench -
      есть 2 вкладки (снизу): "Context Help" и "Snippets".
    > "Context Help" - если выбрано оно, то когда печатаешь код SQL в редакторе, в этом окне
      появляется синтаксис текущего редактируемого выражения, в качестве подсказки. Можно не
      ждать его появляения, а самому вручную выбрать, синтаксис какого выражения показать.
      Синтаксис доступен всего для 9 выражений с "самым сложным" синтаксисом по мнению авторов.
    > "Snippets" - здесь хранятьс сохраненные куски кода. Их можно легко брать и использовать, как
      заготовки. Пользователь может сохранять и использовать свои куски кода, либо использовать
      заготовленные авторами программы.

  > Окно "Schemas" и действия в нем

    > Как выбрать базу данных по умолчанию
      > Нужно щелкнуть правой кнопкой мыши по базе данных, которую требудется сделать БД
        по умолчанию, и выбрать пункт "Set as Default Schema".

    > Контекстное меню в окне "Schemas"
      > Оно разное для разных объектов данных из этого окна.
      > Оно во многом повторяет функции иконок быстрого доступа под главным меню, описанных выше.
      > Также в нем есть 2 интересных пункта: "Copy to clipboard", "Send to SQL editor".
        Они позволяют "на лету" сгенерировать код, касающийся этого объекта данных, такой как
        его определение (выражение CREATE ...), имя и так далее, и отправить его либо в
        буфер обмена (clipboard), либо в SQL-редактор в то место, где установлен курсор.
      > У таблицы есть пункт Truncate, очищающий ее от данных.
      > С помощью Alter... можно, например, добавить новых столбцов таблице. А вообще,
        с помощью этого пункта меняют структуру соответствующего объекта данных.

  > Окно "Information"
    > Имеет 2 вкладки: Object Info и Session.
      > Вкладка Session показывает информацию о подключении к серверу MySQL, такую как
        имя подключения, порт, хост, версия сервера и т.д.
      > Вкладка Object Info показывает информацию о выбранном в разделе SCHEMAS объеке данных.
        Например, если выбрать таблицу, то будет показана информация об ее структуре.

  > Добавление, редактирование, удаление данных в таблицах
    > Редактирование данных возможно только в тех таблицах, которые имеют нижеописанные
      свойства. В противном случае, таблица для Workbench становится read only.
      - Имеет столбец с PRIMARY или UNIQUE, и также с NOT NULL.
      - Запрос SELECT из этой таблицы не содержит агрегирующих функций.
    > Осуществляется следующим образом:
      1. Сначала надо с помощью операции SELECT получить выборку из таблицы. Это можно сделать
         2-мя способами:
         > Либо просто в SQL-редакторе написать и выполнить операцию SELECT на требуемой таблице.
         > Либо щелкнуть по этой таблице ПК мыши в окне SCHEMAS, и выбрать "Select Rows - LIMIT 1000".
      2. В полученной выборке можно редактировать любое поле. Для этого просто надо 2 раза кликнуть
         по нему, вписать новое значение, и нажать enter.
      3. Над окном с выборкой есть иконки, среди которых справа от надписи Import/Export
         есть иконки, позволяющие вызывать такие функции. Можно либо импортировать данные
         из внешнего файла, либо экспортировать имеющиеся данные во внешний файл.
      4. Любые изменения данных не применяются автоматически. Для их применения надо нажать
         кнопку "Apply" справа-снизу в окне с выборкой. Тогда Workbench автоматически сформирует
         SQL-выражения для применения соответствующих изменения, спросит все ли верно, и после
         подтверждения применит их, изменив данные в таблице.
         Пока изменения не были подтверждены с помощью "Apply", их всех можно отменить с помощью
         кнопки по соседству - "Cancel".


  > Импорт / Экспорт данных

    > Общая информация
      > Не перепутать! Это не тот экспорт/импорт для данных в/из файла в таблицах, описанный
        в разделе "Добавление, редактирование, удаление данных в таблицах".
      > Этот экспорт/импорт про очень важное - про то, как делать бэкапы баз данных, и
        восстанавливаться из них.
      > В основе работы этой функциональности лежит утилита mysqldump.
      > Описание настройки этой функциональности выше, в разделе "Настройка импорта и экспорта данных".

    > Экспорт данных
      > Для экспорта данных пройти по следующему пути:
          Объединенное меню Workbench -> Окно "Navigator" -> MANAGEMENT -> Data Export.
      > Тут можно выбрать базы данных и таблицы, которые надо экспортировать.
      > В окне экспорта можно установить некоторые настройки:
        > Как выполнять экспорт:
          > Каждую таблицу в отдельный файл (по умолчанию), или все в 1 файл.
        > Нужно ли экспортировать табличные данные вместе со структурой (по умолчанию),
          или только структуру? (настройка Skip table data).
        > И другие (там и так понятно).

    > Импорт данных
      > Для экспорта данных пройти по следующему пути:
          Объединенное меню Workbench -> Окно "Navigator" -> MANAGEMENT -> Data Import.
      > Нужно сначала указать, из какого типа дампа будет выполнен импорт, в зависимости
        от того, сохранены ли в этом дампе каждая таблица в отдельном файле, или все
        находится в 1 файле.
      > Затем нужно указать (в 1 случае) путь к папки, или (во 2 случае) путь к файлу с дампом,
        и нажать кнопку Start Import справа снизу.


> Работа с моделями

  > Общая информация
    > Меню для работы с моделями НЕ входят в объединенное меню Workbench.
      Они представляют собой 2 отдельных меню:
      > Меню по работе с моделями.
      > Меню по работе с диаграммами.
    > Что можно делать с моделями в Workbench (не полный список):
      - Создавать и редактировать модель графически.
      - Делать реверс инжениринг существующей базы данных в модель.
      - Делать форвард инжениринг модели в существующую базу данных или в SQL-скрипт.
      - Создавать и редактировать таблицы, вставлять данные.

  > Блок, посвященный моделям, на главной (черной) странице.
    > После запуска Workbench 6 открывается главная страница в черных тонах. В нижней части
      этой страницы находится стилистически выделенный блок с заголовком Models.
    > Если уже имеются модели, связанные с этим Workbench, то они отображаются в этом блоке.
    > Справа от заголовка Models есть 3 иконки, дающие доступ к функциональности по созданию моделей:
      - Иконка-плюсик - создать новую модель.
      - Иконка-папка - открыть сохраненную в файле модель
      - Иконка-стрелочка - содержит 2 функции реверс-инжениринга:
        - "Create ERR model from database" - создать новую модель из существующей БД
          на указанном сервере MySQL (реверс инжениринг).
        - "Create ERR model from script" - создать новую модель из сохраненной в
          скрипт .sql структуры базы данных.

  > Меню по работе с моделями

    > Общая информация
      > Это основное меню для работы с моделями.
      > Открывается при создании новой модели, или при открытии старой.
      > Имеет 4 основных блока:
        > User Type List
        > Description Editor
        > Model Overview
        > Modeling Additions
      > Сверху под главным меню имеет блок иконок для быстрого доступа к наиболее часто
        используемой функциональности, на подобие того, какой есть в объединенном меню Workbench.
        Он обеспечивает доступ к следующей функциональности:
        - New Document - создать новую модель.
        - Open Model from File - открыть сохраненную в файле модель
        - Save Model to Current File - сохранить модель в текущем файле
        - Стрелочка налево - изменить состояние модели на 1 шаг назад
        - Стрелочка направо - изменить состояние модели на 1 шаг вперед
        - Add New Diagram - добавить новую диаграмму
        - Add New Schema - добавить новую базу данных
        - Add New Table - добавить новую таблицу
        - Add New View - добавить новое представление
        - Add New Routine - добавить новый скрипт

    > Как сохранить / загрузить модель в файл / из файла.
      > Сохранить
        > File -> Save Model As...
      > Загрузить
        > File -> Open Model...

    > Подробнее о блоке Model Overview
      > Находится по центру меню по работе с моделями, и состоит из следующих подблоков:
        > Диаграммы
        > Physical Schemas
        > Schema Privileges
        > SQL Scripts
        > Model Notes
      > Каждый блок содержит соответствующие объекты баз данных, а также кнопочки для их
        создания.
      > Подблок Диаграммы
        > Содержит созданные диаграммы.
        > Если 2xЩелкнуть по какой-нибудь диаграмме, то происходит переход в меню по работе
          с диаграммами (появляется в новой вкладке).
      > Подблок Physical Schemas
        > Содержит базы данных, принадлежащие этой модели.
          > В самом верху блока можно выбрать базу данных, щелкнув по ней.
          > Все, что ниже строки выбора БД, отображает информацию для выбранной БД.
          > Справа от надписи Physical Schemas есть небольшое меню, которое позволяет:
            - Плюсик - добавить новую БД
            - Минусик - удалить выбранную БД
            - Прочие иконки - изменить вид отображения информации в подблоке
        > Содержит таблицы, представления, скрипты и группы скриптов.
          > Отображаются объекты для выбранной в верхней части подблока базы данных
        > Если 2xЩелкнуть по какому-нибудь объекту, то можно снизу откроется меню для его
          настройки. Например, если щелкнуть по скрипту, то можно будет его изменить. Если
          щелкнуть по таблице, то можно будет изменить её структуру.
      > Подблок Schema Privileges
        > Позволяет настроить привилегии выбранной базы данных.
      > Подблок SQL Scripts
        > Содержит добавленные SQL-скрипты (не путать со скриптами - routines).
        > Их можно редактировать.
      > Подблок Model Notes
        > Содержит заметки к модели, позволяет их редактировать.

  > Меню по работе с диаграммами - редактор моделей

    > Общая информация
      > В этом меню все интуитивно понятно, блока инструментов по работе с внешними ключами.
        Это последние 6 инструментов слева снизу - различные типы связей между таблицами.
      > Использование идентифицирующих связей в MySQL не рекомендуется без особой необходимости,
        поскольку при их использовании возникает проблема курицы/яйца (см. ниже).
      > Наиболее часто используемая и удобная связь:
          1 : n (не идентифицирующая).
      > В редакторе диаграмм можно 2хЩелкнуть по связи, и откроется меню, позволяющее
        ее отредактировать.
      > Учебная база данных Sakila укомплектована файлом sakila.mwb, содержащим модель этой базы
        данных. Эта модель показывает наглядно многие возможности редактора моделей.
        > В особенности стоит обратить внимание на разноцветные слои "Layers", позволяющие
          очень наглядно сгруппировывать таблицы в базе данных по какому-либо признаку.
          Получается очень приочень наглядно.

    > Работа с внешними ключами (Foreign Keys)
      > Foreign Keys поддерживаются только для таблиц на движке INNODB.
      > Всего есть 5 разновидностей связей, складывающиеся из комбинаций свойств, описанных ниже.
      > Связи между таблицами бывают:
        - 1 : 1    | один к одному (идентифицирующая/не идентифицирующая)
        - 1 : n    | один ко многим (идентифицирующая/не идентифицирующая)
        - n : m    | многие ко многим (только идентифицирующая)
        > Подробнее о связи 1 : 1
          > Когда 1-му полю в таблице А соответствует только 1 поле в таблице Б.
          > Например, посмотрим на модель работы электронной очереди.
            Таблица А - содержит столбец customer_id, а таблица Б содержит столбец
            customer_ticket_id. 1-му покупателю соответствует только 1 номер его "билетика" в очереди.
        > Подробнее о связи 1 : n
          > Когда 1-му полю в таблице А могут соответствовать > 1 поля в таблице Б.
          > См. пример ниже
        > Подробнее о связи m : n
          > Когда 1-му полю в таблице А могут соответствовать > 1 поля в таблице Б, и наоборот.
          > Обычно 1 связь типа m : n между 2-мя таблицами, превращают в 2 связи типа 1 : n
            между 3-мя таблицами.
            > Это делают из соображений практичности. Например:
              > Есть у нас 2 таблицы: Students и Teachers. У 1 студента может быть много учителей,
                также как и у 1 учителя может быть много студентов. Значит, между этими таблицами
                связь m : n.
              > Но ведь надо где-то хранить информацию о том, к какому студенту какие учителя
                относятся. И это не удобно делать ни в одной из этих таблиц.
              > Поэтому создается 3-я (промежуточная) таблица с 2 столбцами: teacher_id и student_id.
                И связь n : m заменяется на 2 связи 1 : n - между таблицами Teachers и промежуточной,
                а также между промежуточной, и таблицей Students.
              > Наглядно и с картинками смотри этот пример в следующем обучающем ролике:
                  http://www.youtube.com/watch?v=RXOj0D80kRg&feature=player_detailpage
      > Также связь может быть:
        - Идентифицирующая
        - Не идентифицирующая
        > Подробнее об идентифицирующих связях
          > Идентифицирующей называют такую связь, при которой поля связанного столбца дочерней
            таблицы не могут быть уникальным образом идентифицированы без связанных полей
            родительских таблиц.
          > Фактически это означает следующее. Если дочерняя таблица А связана идентифицирующими
            связями с родительскими таблицами Б и В,
          > Чаще всего идентифицирующая связь используется в промежуточной таблице (см. пример выше),
            используемой для того, чтобы разбить 1 связь n : m на 2 связи 1 : n. В этом случае
            PRIMARY KEY промежуточной таблицы делают композитным - состоящим из первичных ключей
            2-х родительских таблиц (а промежуточная таблица - дочерняя).
            Существование этой самой промежуточной таблицы становится бессмысленным без наличия
            соответствующих друг другу записей в родительских таблицах.
          > Проблема "курицы/яйца" в идентифицирующих связях
            > Если сначала создать идентифицирующие связи, а потом попробовать добавить какие-либо
              данные в эти таблицы, ничего не выйдет. Потому что нельзя одновременно добавить данные
              в > 1 таблицы. А если попытаться добавлять данные в таблицы по очереди, то будет
              возникать ошибка, т.к. при идентифицирующих связях поле в таблице А не может существовать
              без поля в таблице Б.
            > Единственный вариант - это сначала добавить в таблицы все требуемые данные, а затем
              уже создать идентифицирующие связи (что не слишком то удобно).
            > Обсуждение этой темы см. здесь:
                http://stackoverflow.com/questions/12384715/identifying-relationship-many-to-many
        > Подробнее о не идентифицирующих связях
          >
        > Наглядное видео, объясняющее разницу между идентифицирующими м нет связями смотри здесь:
            http://www.youtube.com/watch?v=mVfQtp8Ve9I
      > Вертикальная панель инструментов Редактора Диаграмм имеет 6 инструментов для работы
        с со связями. 5 из них отражают описанные выше разновидности связей, а последний инструмент
        (самый нижний), ... :
        > one-to-one non-identifying relationship
        > one-to-many non-identifying relationship
        > one-to-one identifying relationship
        > one-to-many identifying relationship
        > many-to-many identifying relationship
        > Place a Relationship Using Existing Columns

    > Как автоматически выровнять объекты на схеме
      > Иногда после реверс-инжениринга большой схемы, все её объекте на диаграмме
        сконцентрированы в одной точке и наложены друг на друга. Такая диаграмма нечитаема.
        Вручную все это выравнивать долго. Как же быть?
      > Для этого в меню по работе с диаграммами есть специальная команда для автовыравнивания.
        Запустить её можно так:
          Arrange (главное меню) -> Autolayout


> Форвард и реверс инжениринг. Синхронизация модели и БД.

  > Реверс инжениринг
    > Это процесс получения модели из существующей базы данных.
    > Есть 2 вида реверс инжениринга:
      - С помощью Create Script
      - Из существующей базы данных
    > Подробнее о первом:
      > 2 способа его запустить:
        > На главной странице Workbench в блоке Models нажать на стрелочку -> Create ERR Model
          from Script.
        > В объединенном меню Workbench: File -> Import -> Reverse Engineer MySQL from Script.
    > Подробнее о втором:
      > 2 способа его запустить:
        > На главной странице Workbench в блоке Models нажать на стрелочку -> Create ERR Model
          from Database.
        > В объединенном меню Workbench: Database -> Reverse Engineer...

  > Форвард инжениринг и синхронизация

    > Общая информация
      > Это процесс формирования существующей базы данных из модели.

    > Форвард инжениринг с помощью SQL Script
      > Позволяет создать файл .sql, содержащий модель.
      > Запустить процесс можно так (запустится соответствующий Wizard):
          Меню модели -> File -> Export -> Forward Engineer SQL Create Script...
      > На этапе "SQL Export Options" можно будет указать значения следующих опций:
        - Output SQL Script File
          > Указать путь к папке, в которой будет создан .sql файл.
        - Generate DROP Statements Before Each CREATE Statement
          > -
        - Omit Schema Qualifier in Object Names
          > Опустить в именах объектор квалификатор в виде имени базы данных
        - Generate Separate CREATE INDEX Statements
          > Вместо того, чтобы включать выражения, создающие индексы, внутрь выражения
            CREATE TABLE, создать для них отдельные выражения CREATE INDEX.
        - Add SHOW WARNINGS after every DDL statement
          > Генерирует warning после каждого Data Definition выражения.
        - Do Not Create Users. Only Export Privileges
          > -
        - Generate INSERT Statements for Tables
          > Выбрать эту опцию, если в таблицах есть строки.
      > На этапе "Filter Objects" можно выбрать типы объектов, которые требуется включить в
        итоговой SQL-код.
      > На этапе "Review SQL Script" можно увидеть SQL код, который сгенерировал Workbench,
        и который он собирается поместить в выходной файл. Код можно редактировать.

    > Форвард инжениринг в реальную базу данных
      > Позволяет экспортировать модель на реальный сервер MySQL.
      > Запустить процесс можно так (запустится соответствующий Wizard):
          Меню модели -> Database -> Forward Engineer...
      > Этапы работы Wizard'a (основные):
        > Connection Options
          > Опции подключения к серверу MySQL (как подключаться описано выше).
        > Options
          > Те же опции, что для "Форвард инжениринг с помощью SQL Script"
        > Select Objects
          > можно выбрать типы объектов, которые требуется включить в итоговой SQL-код.
        > Review SQL Script
          > На этапе "Review SQL Script" можно увидеть SQL код, который сгенерировал Workbench,
            и который он собирается исполнить на подключенном сервере MySQL. Код можно редактировать.

    > Синхронизация модели и реальной базы
      > Общая информация
        > Workbench может синхронизировать модель и реальную базу.
        > По умолчанию, синхронизация изменит реальную базу таким образом, чтобы она стала
          идентична модели. То есть, можно вносить изменения в модель, затем синхронизировать ее
          с реальной базой, и аналогичные изменения произойдут и в последней.
        > Вышеописанное поведение "по умолчанию" можно изменить в процессе синхронизации.
        > Процесс синхронизации чувствителен к регистру.
          > Есть даже опасность! Если попытаться синхронизировать модель и базу, в которых
            будут объекты данных, различающиеся только регистром букв, Workbench может вместо
            изменения объекта в базе создать для него DROP операцию, а затем CREATE операцию, и
            таким образом пересоздать. Возможны потери данных.
      > Запустить процесс можно так (запустится соответствующий Wizard):
          Меню модели -> Database -> Synchronize...
      > Этапы работы Wizard'a (основные):
        > Connection Options
          > Опции подключения к серверу MySQL (как подключаться описано выше).
        > Select Schemata
          > Здесь можно выбрать, какие базы данных модели надо синхронизировать с реальным сервером.
        > Select Changes to Apply
          > Здесь можно настроить для каждой таблицы и для каждой базы данных направление
            синхронизации:
            - Кнопка "Update Model" - значит обновить модель. Этой кнопкой можно
              пометить базу данных или таблицу, предварительно выделив её.
            - Кнопка "Update Source" - значит обносить реальную базу. Этой кнопкой можно
              пометить базу данных или таблицу, предварительно выделив её.
            - Кнопка "Ignore" - значит не синхронизировать. Некоторые объекты можно пометить
              этой кнопкой, и тогда синхронизация для них проходить не будет.
        > Review DB Changes:
          > На этапе "Review DB Changes" можно увидеть SQL код, который сгенерировал Workbench,
            и который он собирается исполнить на подключенном сервере MySQL. Код можно редактировать.

    > Сравнение и получение отчета о разнице между моделью и реальной базой
      > Позволяет сравнить модель с реальной базой данных (или с сохраненной в SQL скрипте).
      > Запустить процесс можно так (запустится соответствующий Wizard):
          Меню модели -> Database -> Compare Schemas...
      > Этапы работы Wizard'a (основные):
        ... все интуитивно понятно, описывать здесь незачем. В конце он выдает достаточно
        непонятный текстовый отчет.




-------------------------------------------------- */



?>





















