<?php
/* --------------------------------------------------
---------------- О Г Л А В Л Е Н И Е ----------------
15. phpMyAdmin - UI для MySQL


  >




-------------------------------------------------- */











/* --------------------------------------------------
---------------- И Н Ф О Р М А Ц И Я ----------------

Ссылки:


  > Последняя версия официального руководства по phpMyAdmin находится здесь:
      http://docs.phpmyadmin.net/en/latest/

  > Ссылка на официальный категоризированный справочник всех доступных параметров phpMyAdmin:
      http://docs.phpmyadmin.net/en/latest/config.html#basic-settings

  > Часто задаваемые вопросы на официальном сайте:
      http://docs.phpmyadmin.net/en/latest/faq.html#i-cannot-insert-a-text-file-in-a-table-and-i-get-an-error-about-safe-mode-being-in-effect



  *Примечание: я делал это описание, используя руководство по phpMyAdmin для версии 4.1.0,
               в конце октября 2013 года.

*****************************************************
Оглавление:

  > Введение
    > Что такое phpMyAdmin
    > О привилегиях в phpMyAdmin
    > Пояснение по поводу управления пользователями в phpMyAdmin
    > В настоящее время (версия 4.0.8) phpMyAdmin может следующее...

  > Требования к среде
    > Веб сервер
    > PHP
    > База данных

  > Установка на Windows
    > Общая краткая инструкция по установке
    > Подробнее о создании конфигурационного файла config.inc.php вручную.
    > Использование скрипта с графическим интерфейсом для настройки "config.inc.php"
    > Настройка безопасности
    > Создание служебных таблиц
    > Как проводить обновление до новой версии
    > Доступные способы аутентификации

  > Настройка конфигурации
    > Ссылка на официальный категоризированный справочник всех доступных параметров phpMyAdmin
    > Общая информация
    > Описание настройки различной функциональности



*****************************************************



> Введение
  > Что такое phpMyAdmin
    > phpMyAdmin - это бесплатное приложение, написанное на PHP, предназначенное для управления
      СУБД MySQL через веб-интерфейс в браузере. Иначе говоря, это приложение представляет собой
      клиентскую программу для сервера MySQL (на подобие mysql shell), но имеющую (в отличие от
      консоли) графический пользовательский интерфейс (GUI), работающий через браузер.
    > phpMyAdmin поддерживает широкий диапазон операций с MySQL, MariaDB и Drizzle. Часто используемые
      операции (управление базами данны, таблицами, колонками, связями, индексами, пользователями,
      привилегиями и т.д.) могут быть выполнены с помощью пользовательского интерфейса. При этом
      всегда есть возможность просто выполнить SQL-запрос.
  > О привилегиях в phpMyAdmin
    > phpMyAdmin может управлять как всем сервером MySQL (требуется SUPER привилегия), так и отдельными
      базами данных. Чтобы осуществить последнее, потребуется настроить аккаунт на сервере
      MySQL, и ограничить его права таким образом, чтобы он мог совершать заданные действия только
      с указанной базой данных.
  > Пояснение по поводу управления пользователями в phpMyAdmin
    > Когда пользователь вводит логин и пароль, и подключается к phpMyAdmin, эти логин и пароль
      передаются прямо на сервер MySQL. У phpMyAdmin нет своей системы управления аккаунтами
      пользователей. Все пользователи должны быть иметь действующий аккаунт на сервере MySQL.
    > Раздел Users пользовательского интерфейса может быть использован для управления аккаунтами
      MySQL
  > В настоящее время (версия 4.0.8) phpMyAdmin может следующее:
    - Просматривать, создавать, копировать, удалять - базы данных, таблицы,
      представления, колонки, индексы.
    - Отображать множественные результаты из запросов или сохраняемых процедур.
    - Выполнять, сохранять и редактировать любое SQL-выражение, даже пакетный запрос.
    - Загружать данные из текстового файла в таблицу.
    - Создавать и считывать дампы таблиц.
    - Экспортировать данные в разных форматах: CSV, XML, PDF, ISO/IEC 26300 (OpenDocument текст
      и таблица), Microsoft Word 2000, LATEX.
    - Импортироать данные и структуры MySQL из таблиц OpenDocument, XML, CSV и SQL-файлов.
    - С помощью phpMyAdmin можно работать одновременно со многими серверами баз данных.
    - Управлять привилегиями и пользователями MySQL.
    - Проверять ссылочную целостность для таблиц на движке MyISAM.
    - Использовать Query-by-example (QBE), создавать сложные запросы автоматически соединяющиеся
      с требуемыми таблицами.
    - Создавать графически макет базы данных, который можно экспортировать в PDF.
    - Осуществлять глобальный поиск по базам данных, таблицам и представлениям.
    - Поддерживает таблицы на движке INNODB и внешние ключи.
      А что phpMyAdmin НЕ поддерживает относительно таблиц на INNODB? Читать по ссылке:
      http://docs.phpmyadmin.net/en/latest/faq.html#faq3-6
    - Поддерживает mysqli.
    - Позволяет создавать, редактировать, вызывать, экспортировать и удалять сохраняемые
      процедуры и функции.
    - Позволяет создавать, редактировать, экспортировать и удалять события и триггеры.
    - Переведен на 62 языка.


> Требования к среде
  > Веб сервер
    > Поскольку UI phpMyAdmin запускается непосредственно в браузере, потребуется веб сервер
      для размещения в нем файлов приложения.

  > PHP
    > Требуется PHP >= 5.3.0, с поддержкой сессий, содержащий SPL (standard PHP library),
      поддержкой JSON, и расширением mbstring. Все это идет обычно вместе с PHP прямо из коробки.
    > Чтобы работала закачка файлов .zip, для PHP требуется расширение zip.
    > Чтобы отображать встроенные эскизы JPEG ("image/jpeg: inline") с их оригинальным
      соотношением сторон, требуется, чтобы PHP имел поддержку GD2.
    > При использование аутентификации через куки, сильно рекомендуется использовать расширение
      mcrypt, а для 64-битных машин это обязательное требование. Если не использовать mcrypt,
      то phpMyAdmin будет загружать страницы существенно медленнее.
    > Для поддержки полосы прогресса загрузки, вервия должна быть PHP >= 5.4.0,
      а также требуется поддержка JSON.
    > Для поддержки импорта XML-файлов и таблиц OpenDocument, требуется расширение libxml.
    > Чтобы увеличить производительность приложения, рекомендуется установить расширение ctype
      (начиная с PHP >= 4.2.0 включено в сборку по умолчанию)

  > База данных
    > phpMyAdmin поддерживает только следующие СУБД: MySQL > 5.0, MariaDB > 5.0, Drizzle


> Установка на Windows

  > Общая краткая инструкция по установке
    1. Выбрать и скачать подходящую сборку phpMyAdmin с сайта phpmyadmin.net. Некоторые сборки
       содержат только английский язык, другие содержат все языки.
    2. Распаковать содержимое архива в корневую директорию веб сервера, или в ее поддиректорию.
       Если в браузере открыть папку с phpMyAdmin, то должна появиться либо станица для
       аутентификации, либо главная страница приложения (если аутентификация автоматизирована).
       > Если вместо окна аутентификации phpMyAdmin откроется листинг файлов в этой папке,
         то значит надо зайти в конфигурационный файл веб сервера, задать для этой папки
         ресурс по умолчанию "index.php". Для сервера APACHE в конфиг нужно добавить код
         ниже.
         > Можно добавить его в главный конфиг (обычно, "httpd.conf"), или в файл .htaccess,
           находящийся в корне папки phpMyAdmin. После добавления в главный конфиг потребуется
           перезагрузить сервер, а добавление в .htaccess не требует перезагрузки.
         > Путь "C:\...\phpMyAdmin" в коде ниже надо заменить на путь к папке с phpMyAdmin.

                ----------------------------------
                  <Directory "C:\...\phpMyAdmin">
                    <IfModule dir_module>
                      DirectoryIndex index.php
                    </IfModule>
                  </Directory>
                ----------------------------------

    3. Настроить phpMyAdmin.
       > Есть 2 способа это сделать:
         1) Вручную, создав конфигурационный файл config.inc.php, и настроив его параметры.
            > Справку по директивам конфигурационного файла смотри здесь:
                http://docs.phpmyadmin.net/en/latest/config.html#basic-settings
         2) С помощью скрипта с графическим интерфейсом.
       > На "домашнем" сервере MySQL у многих в административном аккаунте root нет пароля.
         А вход в phpMyAdmin с аккаунтом без пароля запрещен настройками конфига по умолчанию.
         Чтобы убрать это препятствие, надо открыть файл "config.inc.php" в корневой директории
         phpMyAdmin (только сначала его надо создать, как описано ниже), и там написать директиву:
          $cfg['Servers'][$i]['AllowNoPassword'] = true;
       > У многих сервер MySQL работает не через стандартный порт. В этом случае в конфиге
         phpMyAdmin надо указать порт, через который работает сервер (в конфиге порт по
         умолчанию - 3306). Для этого надо добавить директиву ниже. Допустим, мы хотим
         указать порт 3308:
           $cfg['Servers'][$i]['port'] = 3308;
       > По умолчанию phpMyAdmin настроен так, что запрещает всем пользователям операцию
         DROP - т.е. нельзя удалить никакую базу данных. Чтобы это исправить, требуется
         добавить в конфигурационный файл директиву ниже:
           $cfg['AllowUserDropDatabase'] = true;
       > Можно сразу и настроить используемый тип аутентификации (их обзор ниже). Его можно
         указать в директиве $cfg['Servers'][$i]['auth_type'] = 'желаемый_тип_аутентификации';
         По умолчанию стоит cookie, и это рекомендуемый тип.
         > Для "домашней" разработки, когда только ты работаешь и имеешь доступ к данной
           инфраструктуре, можно использовать аутентификацию типа config. Для этого в вышеуказанной
           директиве нужно указать "config", а также в конфигурационном файле прописать логин
           и пароль с помощью директив ниже.
           *Примечание: это не безопасно, потому что логин с паролем лежат в конфиге в виде
                        простого текста, и их может кто-нибудь подсмотреть.
             $cfg['Servers'][$i]['user'] = user_name;
             $cfg['Servers'][$i]['password'] = password;

  > Подробнее о создании конфигурационного файла config.inc.php вручную.
    > Конфигурационный файл представляет собой обычный PHP файл.
    > Если тебя устраивают настройки по умолчанию, то нет необходимости создавать конфигурационный
      файл "config.inc.php", чтобы перекрыть какие-то дефолтные свойства.
    > Сначала нужно либо просто вручную создать файл с именем "config.inc.php", либо взять
      заготовленныйв сборке шаблон (представляющий собой минимальный конфиг) с именем
      "config.sample.inc.php", скопировать его, и переименовать в "config.inc.php".
    > Размещать конфигурационный файл в корневой папке (самого верхнего уровня) приложения phpMyAdmin.
    > phpMyAdmin сначала грузит конфигурации из "libraries/config.default.php", а затем из
      конфигурационного файла "config.inc.php", и перезаписывает свойства в первом свойствами из
      последнего.
    > Примеры:
      > Например, если ты не хочешь, чтобы тебя каждый раз при входе в phpMyAdmin спрашивали
        пароль и логин, то их можно прописать в конфигурационном файле. Код будет выглядеть так:

        ----------------------------------------------------------------------------------------
          <?php

          $i=0;
          $i++;
          $cfg['Servers'][$i]['user']          = 'root';
          $cfg['Servers'][$i]['password']      = 'cbb74bc'; // use here your password
          $cfg['Servers'][$i]['auth_type']     = 'config';
          ?>
        ----------------------------------------------------------------------------------------

  > Использование скрипта с графическим интерфейсом для настройки "config.inc.php"
    > Вместо того, чтобы вручную создавать и редактировать конфигурационный файл phpMyAdmin
      "config.inc.php", можно создать его с помощью графического интерфейса, используя Setup Script.
    > По сути, этот скрипт позволяет через интерфейс в браузере настроить требуемые параметры,
      затем сохраняет конфигурационный файл в папку "config", откуда его можно взять и переместить
      в корень phpMySql (чтобы этот конфиг вступил в силу).
    > Краткое пошаговое руководство:
      1) Сначала нужно создать папку "config" в корневой директории phpMyAdmin. Это меры по улучшению
         безопасности.
      2) Открыть "setup/" в браузере. Отредактировать все, что надо, и ОБЯЗАТЕЛЬНО нажать на кнопку
         "save", иначе ничего не сохранится. Скрипт создаст новый файл "config.inc.php" в папке
        "config/".
      3) После того, как конфигурационный файл был создан в папке "config", чтобы он заработал,
         его надо перенести из этой папки в корневую директорию phpMyAdmin.
    > Дополнительная безопасность при установке:
      > После установки удалить setup-директорию из папки phpMyAdmin.
      > Использовать способ аутентификации с помощью Кук.
      > В случае, если требуется сделать так, чтобы пользователи MySQL не имели доступа к
        phpMyAdmin, можно использовать следующую опцию для настройки этих ограничений:
           $cfg['Servers'][$i]['AllowDeny']['rules']
      > Чтобы защититься от ДДОС атак, можно активировать капчу следующими опциями в конфиге:
          $cfg['CaptchaLoginPublicKey']   и    $cfg['CaptchaLoginPrivateKey'].
      >

  > Настройка безопасности
    > Если ты используешь настройки в конфиге, позволяющие проводить автоматическую аутентификцию
      (как показано в примере выше), то рекомендуется защитить директорию с phpMyAdmin.
      А вообще, рекомендуется для аутентификации использовать утилиту mysql_config_editor -
      проводить аутентификацию из зашифрованного .mylogin.ini файла
      (см. 3. Работа с утилитой mysql_config_editor).
    > Надо запретить доступ к поддиректориям "./libraries" и "./setup/lib" корневой директории
      phpMyAdmin в конфигурации веб сервера. В веб сервере Apache можно либо внести соответствующие
      директивы в главный конфигурационный файл httpd.conf, либо использовать файлы .htaccess
      в этих поддиректориях.
    > Еще хорошая идея защитить phpMyAdmin от доступа роботов, потому что они обычно не могут
      сделать ничего хорошего там. Это можно сделать, используя файл "robots.txt" в корневой
      папке веб сервера. Подробнее см. здесь: http://docs.phpmyadmin.net/en/latest/setup.html



  > Создание служебных таблиц
    > Для работы некоторых механизмов phpMyAdmin (закладки, комментарии, SQL-история,
      механизм слежения, генерация PDF, трансормация содержимого колонок и т.д.)
      требуется создать служебные таблицы.
    > Можно использовать phpMyAdmin для создания этих служебных таблиц в автоматическом режиме
      (прим. автора: Как? Документация умалчивает).
    > Или создать их вручную...
      > Для этого в директории приложения надо найти папку "./examples/", найти в ней
        файл "create_tables.sql", и выполнить его у себя на сервере MySQL, как внешний скрипт.
        Для этого использовать утверждение SOURCE. В примере ниже требуется заменить указанный
        путь на реальный путь к вышеуказанному файлу. Не следует заключать путь в кавычки,
        даже если он содержит пробелы, иначе будет ошибка 2 или 22.
          SOURCE C:/.../mysql/data/create_tables.sql;
        > После этого на указанном в настройках сервере MySQL появится база данных "phpmyadmin",
          содержащая все требуемые таблицы.
      > Затем надо зайти в конфигурационный файл приложения "config.inc.php", и прописать там
        имена созданных таблиц.
        > Если ты создавал файл "config.inc.php" из файла-примера "config.sample.inc.php", то
          там уже есть все необходимые строчки под заголовком "Storage database and tables",
          но они закомментированы. Их просто надо раскомментировать.

  > Как проводить обновление до новой версии
    > От старой версии надо сохранить только конфигурационный файл "config.inc.php".
    > Установить новую версию, и положить в ее корневую директорию этот конфиг.
    > Возможно, архитектура конфига для новой версии может отличаться (маловероятно).
      Но все же стоит проверить документацию для новой версии.

  > Доступные способы аутентификации
    > Список доступных способов и их краткое описание
      > HTTP аутентификация
        > Использует основной метод HTTP аутентификации, и позволяет войти, используя логин
          и пароль от аккаунта любого из действующих пользователей сервера MySQL.
        > Поддерживается большинством конфигураций PHP.
      > Куки аутентификация
        > Можно использовать это способ, как замену для HTTP аутентификации.
        > У пользователя в браузере должны быть включены куки.
      > Signon аутентификация
        > Это удобный способ использовать данные для аутентификации из другого приложения.
        > Подробнее см. документацию: http://docs.phpmyadmin.net/en/latest/setup.html
      > Аутентификация с помощью конфига
        > Пример этой аутентификации можно увидеть выше. В конфигурационном файле "config.inc.php"
          для соответствующих свойств указываются логин и пароль.
        > Не безопасен, потому что кто угодно, кто может открыть и просмотреть конфигурационный
          файл, может найти там твой пароль в виде обычного текста.
      > Swekey-аутентификация
        > Swekey - дешевый USB-ключ для аутентификации, который может быть использован для веб
          приложений. Подробнее см. документацию: http://docs.phpmyadmin.net/en/latest/setup.html
    > Подробнее об аутентификации с помощью HTTP и Кук
      > Рекомендуется использовать аутентификацию через куки.
      > Аутентификация с помощью HTTP и Кук рекомендуется для использования в многопользовательской
        среде, где требуется дать каждому пользователю доступ только к определенным базам данных
        и возможностям.
      > Эти способы более безопасны, чем аутентификация с помощью конфига. Ведь пароль в этом случае
        не лежит в виде простого текста в конфигурационном файле "config.inc.php" (кроме, возможно,
        $cfg['Servers'][$i]['controluser'], что весьма опасно). Однако, учти, что пароль путешествует
        через соединение в открытом виде, если не использовать протокол HTTPS. А вот в режиме
        аутентификации через куки пароль сохранен и зашифрован алгоритмом blowfish во временной
        куке.
      > Для использования аутентификации через HTTP и Куки, phpMyAdmin требует наличие так
        называемого "contrlouser" пользователя (настроить его можно в конфигурационном файле
        с помощью опций  $cfg['Servers'][$i]['controluser'] и  $cfg['Servers'][$i]['controlpass'] ).
        > Подразумевается, что только этот "controluser" должен иметь привилегию SELECT для таблиц:
          mysql.user (кроме паролей), mysql.db, mysql.host, mysql.tables_priv (все колонки,
          кроме "Grantor" и "Timestamp").
      > Пример. Допустим, 'controluser' имеет логин 'pma', и пароль 'pmapass'. Тогда назначить ему
        требуемые привилегии можно с помощью следующего SQL-выражения:

        -----------------------------------------------------------------------
          GRANT USAGE ON mysql.* TO 'pma'@'localhost' IDENTIFIED BY 'pmapass';
          GRANT SELECT (
          Host, User, Select_priv, Insert_priv, Update_priv, Delete_priv,
          Create_priv, Drop_priv, Reload_priv, Shutdown_priv, Process_priv,
          File_priv, Grant_priv, References_priv, Index_priv, Alter_priv,
          Show_db_priv, Super_priv, Create_tmp_table_priv, Lock_tables_priv,
          Execute_priv, Repl_slave_priv, Repl_client_priv
          ) ON mysql.user TO 'pma'@'localhost';
          GRANT SELECT ON mysql.db TO 'pma'@'localhost';
          GRANT SELECT ON mysql.host TO 'pma'@'localhost';
          GRANT SELECT (Host, Db, User, Table_name, Table_priv, Column_priv)
          ON mysql.tables_priv TO 'pma'@'localhost';

          -- А также следующие права, если ты хочешь использовать новые возможности phpMyAdmin:
          GRANT SELECT, INSERT, UPDATE, DELETE ON <pma_db>.* TO 'pma'@'localhost';
        -----------------------------------------------------------------------

      > А вот так можно, например, дать какому-нибудь новому пользователю привилегию работать
        с определенной базой данных (подробнее см. "13. Синтаксис SQL - администр., утилиты MySQL"):

        -----------------------------------------------------------------------------------------------
          GRANT ALL PRIVILEGES ON user_base.* TO 'real_user'@localhost IDENTIFIED BY 'real_password';
        -----------------------------------------------------------------------------------------------


> Настройка конфигурации
  > Ссылка на официальный категоризированный справочник всех доступных параметров phpMyAdmin:
      http://docs.phpmyadmin.net/en/latest/config.html#basic-settings

  > Общая информация
    > Почти все настройки "по умолчанию" вшиты в программу, и находятся по адресу (от корня приложения):
      "libraries/config.default.php". Но в этом файле менять ничего не надо. Если какие-то из
      настроек по какой-то причине не устраивают, их можно переопределить в конфигурационном
      файле "config.inc.php", и определенные в этом файле настройки переопределят настройки
      по умолчанию из файла "config.default.php".
      > Этот конфигурационный файл не существует при установке. Поэтому, если требуется что-то
        настроить, придется его самому создать. Как это сделать, описано выше в разделе
        "Установка на Windows".
    > Параметры, относящиеся к дизайну (такие, как цвет), находятся в файле (от корня приложения):
      "themes/themename/layout.inc.php".
    > Это не совсем относится к настройкам, однако стоит это упомянуть. Можно создать и положить
      в корень приложения файлы "config.footer.inc.php" и "config.header.inc.php", чтобы
      добавить свой код в начало и конец страницы.
    > Параметры, которые обязательно надо настроить при установке, и их настройка, описаны в
      разделе "Установка на Windows".

  > Описание настройки различной функциональности

    >









-------------------------------------------------- */



?>




















