<?php
/* --------------------------------------------------
---------------- О Г Л А В Л Е Н И Е ----------------
2. Работа с mysql shell

>


-------------------------------------------------- */














/* --------------------------------------------------
---------------- И Н Ф О Р М А Ц И Я ----------------

Ссылки:

  > Справочник по MySQL shell:
      http://dev.mysql.com/doc/refman/5.6/en/mysql.html

  > Справочник по доступным опциям MySQL shell:
      http://dev.mysql.com/doc/refman/5.6/en/mysql-command-options.html

  > Справочник по доступным командам MySQL shell:
      http://dev.mysql.com/doc/refman/5.6/en/mysql-commands.html

  > Утилита mysql_config_editor для создания файла .mylogin.ini с данными о host, login, password
      http://dev.mysql.com/doc/refman/5.6/en/mysql-config-editor.html



*****************************************************
Оглавление:


  > mysql.exe - это простой shell для работы с MySQL сервером.
  > Запуск mysql shell
  > Server Side Help
  > Выполнение SQL выражений из .txt файла
  > Использование "защиты от дурака" при исполнении команд UPDATE и DELETE
  > Потенциальная опасность использования опции Auto-Reconnect при обрыве соединения
  > Команды для работы с mysql shell
  > Формирование строки для настройки prompt
  > Опции mysql shell



*****************************************************



О mysql.exe
> mysql.exe - это простой shell для работы с MySQL сервером.
  > Shell - оболочка операционной системы - интерпретатор команд операционной системы,
    обеспечивающий интерфейс для взаимодействия пользователя с функциями системы.

> Запуск mysql shell
  1. Запустить cmd.exe от имени администратора.
  2. Прописать путь к mysql.exe в двойных "" и запустить программу. Например:
     "C:\...\MySQL\bin\mysql"
     > Если этот путь прописан в системной переменной windows PATH, то можно просто
       ввести "mysql", тогда windows автоматом будет искать в прописанном в PATH пути,
       и найдет mysql.exe. Это удобно, потому что коротко.
     > Если требуется запустить mysql shell с конкретным логином (например, "Ivan') и
       паролем (например, "IvansPass"), то нужно указать соответствующие опции:
       > Вариант 1 (длинный синтаксис):
         "C:\...\MySQL\bin\mysql" --user=Ivan --password=IvansPass
       > Вариант 2 (короткий синтаксис):
         "C:\...\MySQL\bin\mysql" -uIvan -pIvansPass
       *Примечание: а вообще справочник всех опций (и в длинном, и в коротком синтаксисе) здесь:
                    http://dev.mysql.com/doc/refman/5.6/en/mysql-command-options.html

> Server Side Help
  > Прямо в mysql shell можно воспользоваться так называемым server side help. Работает он следующим образом.
    Если воспользоваться командой help в mysql shell, и использовать аргумент для нее, то производится поиск в
    MySQL Reference Manual, и результат выводится прямо в mysql shell.
  > Это иногда может быть полезно для быстрого получения справочных данных, если не охота лезть в браузер.

> Выполнение SQL выражений из .txt файла
  > Если mysql shell еще не запущен, то можно его запустить и сразу выполнить выражения из указанного текстового
    файла, для указанной ДБ:
        mysql db_name < text_file
    > Если в текстовом файле в начале есть выражение USE db_name, указывающее на то, что эта БД используется по умолчанию,
      то можно опустить db_name в выражении выше, и написать просто:
        mysql < text_file
  > Если mysql shell уже запущен, то запустить выполнение выражений из .txt файла можно с помощью команд:
    > source file_name
    > \. file_name
  > Также можно использовать опцию --verbose, благодаря которой текст каждого запроса будет выводиться перед выводом его результата.
  > MySQL сервер игнорирует BOM символы, которые могут идти в начале .txt файла с SQL-выражениями для исполнения.

> Использование "защиты от дурака" при исполнении команд UPDATE и DELETE
  > Рекомендуется использовать всем начинающим пользователям сервера MySQL.
  > Команда UPDATE и DELETE опасны тем, что если отдавая их не уточнить, на какие именно
    строки нужно воздействовать с помощью WHERE, то, например, команда DELETE
    удалит все данны из таблицы. Например:
      DELETE FROM tbl_name    - эта команда удаляет все данные из таблицы tbl_name
  > При включенной --safe-updates команды UPDATE и DELETE не сработают без WHERE или LIMIT.
  > Включить "защиту от дурака" можно с помощью опции --safe-updates
    > Когда эта опция включена, mysql применяет следующее выражение после подключения к серверу:
        SET sql_safe_updates=1, sql_select_limit=1000, max_join_size=1000000;

> Потенциальная опасность использования опции Auto-Reconnect при обрыве соединения
  > При обрыве соединения сервер mysql по умолчанию пытается переподключиться и продолжить
    выполнение отправленного до обрыва запроса. Так вот, опасность в том, что при завершении
    предыдущего соединения все пользовательские настройки были потеряны:
      временные таблицы, autocommit mode и определенные пользователем сессионные переменные.
    В связи с чем запрос может сделать совсем не то, что подразумевалось.
    > Например:
      > SET @a=1;
      > INSERT INTO t VALUES(@a);
        ERROR 2006: MySQL server has gone away
        ... здесь произошел обрыв соединения и авто-переподключение ...
      > Query OK, 1 row affected (1.30 sec)
     * В результате потери соединения значение переменной @a было потеряно, и в таблицу записался NULL.
  > Отключить авто-переподключение можно опцией --skip-reconnect

> Команды для работы с mysql shell
  > Mysql shell посылает все SQL запросы на сервер, где они и выполняются. но есть
    список команд, которые mysql shell может сам интерпретировать.
  > Чтобы посмотреть список всех доступных компнд, нужно ввести в mysql shell
    одну из следующих команд (все синонимы): "help", "\h", "\?".
  > Каждая команда имеет длинную и которкую формы.
    > Длинная форма команды должна заканчиваться delimiter'ом. А короткая - нет.
    > Использование коротких команд в длинных многострочных не поддерживается.
  > Еще можно использовать "CTRL + C" для сброса текущего выражения.
  > Команды для работы с mysql shell
 Д Л И Н Н А Я | КОРОТКАЯ | О П И С А Н И Е
    > ?          | \?  | синоним 'help' - выводит список доступных mysql команд
    > clear      | \c  | очистить команду
    > connect    | \r  | переподключиться к серверу, возможные опции - db и host
    > delimiter  | \d  | установить указанный символ в качестве разделителя SQL выражений (по умолчанию ';')
                         > delimiter "здесь_новый_разделитель"
    > edit       | \e  | редактировать текущее выражение (работает только в UNIX)
    > ego        | \G  | отправить текущее выражение на сервер для выполнения
                         > отобразить результат в вертикальном формате
    > exit       | \q  | выйти из mysql.exe
    > go         | \g  | отправить текущее выражение на сервер для выполнения
    > help       | \h  | выводит список доступных mysql команд
    > nopager    | \n  | выключить output paging (работает только в UNIX)
    > notee      | \t  | выключить запись выражений и их результатов в файл
    > pager      | \P  | включить output paging (работает только в UNIX)
    > print      | \p  | вывести на экран текущее выражение (просто посмотреть, не исполнять)
    > prompt     | \R  | настроить надпись слева в командной строке, по умолчанию: "mysql>"
                         > prompt [str]  - где [str] строка в определенном формате (см. ниже)
                         > если ввести prompt без аргумента, то он установится на дефолтное значение "mysql>"
    > quit       | \q  | выйти из mysql.exe
    > rehash     | \#  | обновить хэш автозавершения имен, который мог устареть, пока ты вводил выражение
                         > он содержит имена баз данных, таблиц и столбцов
                         > чтобы им воспользоваться, надо ввести первые несколько букв и нажать TAB
                         > опция "--auto-rehash" позволяет делать это автоматически (она по умолчанию включена)
    > source     | \.  | исполнить SQL выражения из файла по указанному пути (на windows использовать / )
                         > source "c:/.../mySqlFile.sql"
    > status     | \s  | вывести информацию о статусе соединения и используемом сервере
                         > показывает версию сервера, текущую DB, кодировки сервера и клиента,
                           используемый порт, используемый delimiter, ... и еще кое-что.
    > system     | \!  | выполняет указанную команду, использую командный интерпретатор по умолчанию (работает только в UNIX)
    > tee        | \T  | включить запись выражений и их результатов в файл
                         > --tee=file_name  - так можно ее включить при запуске mysql.exe
                         > tee [file_name]  - команда для оперативного включения tee
    > use        | \u  | искользовать указанную базу данных по умолчанию
                         > use [db_name]
    > charset    | \C  | \С [charset_name] - меняет кодировку по умолчанию
    > warnings   | \W  | включить отображение предупреждений (если есть) после каждого выражения
    > nowarning  | \w  | выключить тображение предупреждений (если есть) после каждого выражения

  > Формирование строки для настройки prompt
    > Что такое строка prompt?
      > Когда mysql shell включен, то в самом начале строки, слева от курсора, можно увидть
        вот такую строку:  mysql>
        "mysql" здесь - это и есть prompt строка. По умолчанию она имеет такое значение.
        Но его для удобства можно изменить на, например, имя текущей БД по умолчанию,
        текущее время, текущий логин и пароль и так далее (см. ниже).
    > Способы изменить prompt:
      > Способ 1. Запустить mysql shell, и при запуске указать опцию со строкой prompt. Например:
                  mysql --prompt="(\u@\h) [\d]> "
      > Способ 2. Указать опцию со строкой prompt в файле конфигурации my.ini в группе [mysql],
                  и тогда эта опция будет запускаться автоматически при каждом запуске сервера. Например:
                  prompt=(\\u@\\h) [\\d]>\\_
      > Способ 3. В уже запущенном mysql shell с помощью команды prompt. Например:
                  prompt (\u@\h) [\d]>\_
    > Элементы для составления строки prompt (которая должна быть в определенном формате):
      > \c  | счетчик, который прибавляет +1 после каждого отправленного на сервер выражения
      > \D  | полная текущая дата
      > \d  | база данных, используемая по умолчанию
      > \h  | хост сервера
      > \l  | текущий delimiter
      > \m  | менуты текущего времени
      > \n  | символ новой строки
      > \O  | текущий месяц в 3-буквенном формате (Jan, Feb, ...)
      > \o  | текущий месяц в цифровом формате
      > \P  | am/pm
      > \p  | текущий TCP/IP порт или сокет
      > \R  | текущее время в 24-часовом формате
      > \r  | текущее время в 12-часовом формате
      > \S  | точка с запятой
      > \s  | секунды текущего времени
      > \t  | символ TAB
      > \U  | полное имя аккаунта [user_name@host_name]
      > \u  | твой username
      > \v  | версия сервера
      > \w  | текущий день недели в 3-буквенном формате (Mon, Tue, ...)
      > \Y  | текущий год, 4 цифры
      > \y  | текущий год, 2 цифры
      > \_  | пробел
      > \   | пробел (здесь его не видно, он следует за обратным слэшем)
      > \'  | одиночная кавычка
      > \"  | двойная кавычка
      > \\  | обратный слэш
      > \x  | для любого x, не описанного выше

> Опции mysql shell
  > Способы применить опции mysql shell:
    > Способ 1. Прописать опции в конфигурационном файле my.ini в группах [mysql] и [client]
    > Способ 2. Указать опции при запуске mysql shell.
  > Опции:
    > --auto-rehash                         | включить автоматический рехэш автокомплита имен (включен по умолчанию)
    > --auto-vertical-output                | включить автоотображение результата в вертикальном виде, если в горизонтальный он не помещается
    > --batch                               | не использовать history file
    > --binary-mode                         | отключить автоперевод \r\n -> \n и обработку \0, как конца запроса
    > --bind-address=ip_address             | использовать указанный network interface для подключения к серверу MySQL
    > --character-sets-dir=path             | указать папку, в которой лежат character sets
    > --column-names                        | писать имена колонок в результат
    > --column-type-info                    | отображать результирующий набор метаданных
    > --comments                            | сохранять ли комментарии при отправки выражений на сервер (по умолчанию - нет: --skip-comments)
    > --compress                            | сжимать трафик между сервером и клиентом, если оба поддерживают сжатие
    > --connect-expired-password            | указать, что к серверу можно подключиться с истекшим паролем в режиме песочницы (что бы это ни значило)
    > --connect_timeout=value               | секунды, спустя которые connection timeout (по умолчанию =0)
    > --database=dbname                     | база данных по умолчанию
    > --debug[=debug_options]               | писать debugging log
    > --debug-check                         | вывести информацию о дебаггинге
    > --debug-info                          | вывести информацию о дебаггинге, и статистику по использованию памяти и процессора
    > --default-auth=plugin                 | client-side плагин для аутентификации
    > --default-character-set=charset_name  | имя character set клиента, используемое по умолчанию
    > --delimiter=str                       | установить delimiter для выражений (по умолчанию используется ; )
    > --enable-cleartext-plugin             | включить плагин для аутентификации cleartext
    > --execute=statement                   | выполнить statement и затем quit
    > --force                               | продолжать, даже если есть ошибки в SQL выражении
    > --help                                | отобразить help message и quit
    > --histignore=pattern_list             | список выражений, которые не писать в лог
    > --host=host_name                      | подключиться к серверу MySQL на указанном хосте
    > --html                                | производить вывод в виде html
    > --ignore-spaces                       | игнонировать пробелы после имени функции
    > --init-command=str                    | SQL выражение, которое исполнится сразу после подключения к серверу MySQL
    > --line-numbers                        | включить запись номеров строк, в которых ошибки
    > --local-infile[={0|1}]                | вкл/выкл возможность LOCAL использовать LOCAL_DATA_INFILE.
    > --login-path=name                     | прочитать данны о host, login, password из файла .mylogin.ini, путь к которому указан в этой опции
                                              > Используй утилиту mysql_config_editor, чтобы создать такой файл.
                                                > http://dev.mysql.com/doc/refman/5.6/en/mysql-config-editor.html
    > --max_allowed_packet=value            | максимальный размер буфера для клиент/серверного общения. По умолчанию 16MB, максимум 1GB
    > --max_join_size=value                 | лимит на MAX число строк для JOIN, при использовании --safe-updates
    > --named-commands                      | разрешить "длинный" формат команд, а не только "короткий"
    > --net_buffer_length=value             | размер буфера для TCP/IP и сокет коммуникация, по умолчанию 16KB
    > --no-auto-rehash                      | выключить автоматический рехэш, синоним -skip-auto-rehash
    > --no-beep                             | не издавать звук (для настольного PC), когда возникают ошибки
    > --one-database                        | (рудиментарная команда) исполнять только выражения, для которы БД по умолчанию в shell совпадает с ДБ в USE в выражении
    > --pager[=command]                     | использовать указанную команду для paging query output (только для UNIX)
    > --password[=password]                 | указать пароль для подключения к серверу MySQL
    > --pipe                                | (для windows) подключиться к серверу MySQL, используя named pipe (именованный канал)
    > --plugin-dir=path                     | указать путь к папке с плагинами
    > --port=port_num                       | указать TCP/IP порт для подключения к серверу MySQL
    > --prompt=format_str                   | указать формат строки prompt (см. выше)
    > --protocol=type                       | указать протокол для подключения к серверу
    > --quick                               | не кэшировать выражение для запроса, а выводить результат сразу, как оно получено
                                              > при этом history file не используется
    > --raw                                 | отключает экранирование спец. символов Newline, tab, NUL, and backslash
                                              > нужно при "нетабличном" выводи, при опциях  --batch или --silent
    > --reconnect                           | если соединение с сервером потеряно, автоматически попробовать переподключиться
    > --safe-updates                        | (синоним --i-am-a-dummy) разрешать только те выражения UPDATE и DELETE,
                                              в которых явно указано, на какие строки надо воздействовать.
    > --secure-auth                         | не отправлять пароли на сервер в старом (pre-4.1) формате. Включена по умолчанию.
                                              > использовать --skip-secure-auth, чтобы отключить
    > --select_limit=value                  | авто-лимит для выражений SELECT при использовании --safe-updates (1000 по умолчанию)
    > --server-public-key-path=file_name    | путь к файлу, содержащему RSA public key. Он используется для шифрования пароля
                                              клиента для соединений с сервером для аккаунтов, использующих sha256_password plugin.
    > --show-warnings                       | показывать warnings после каждого выражения, если они есть
    > --sigint-ignore                       | Ignore SIGINT signals (typically the result of typing Control+C)
    > --silent                              | включить "тихий режим", полезен для UNIX-овского less output.
                                              производит не табличный вывод и экранирует спец. символы (последнее отключается использованием --raw)
    > --skip-auto-rehash                    | выключить автоматический рехэш автокомплита имен (включен по умолчанию)
    > --skip-column-names                   | не писать имена колонок в выводе
    > --skip-line-numbers                   | выключить запись номеров строк, в которых ошибки
    > --skip-named-commands                 | запретить "длинный" формат команд, разрешить только только "короткий"
    > --skip-pager                          | Disable paging
    > --skip-reconnect                      | если соединение с сервером потеряно, не пробовать автоматически переподключаться
    > --socket=path                         | для соединений с localhost, имя именованного канала (named pipe) для использования
    > --ssl-ca=file_name                    | путь к файлу, который содержит список trusted SSL CAs
    > --ssl-capath=dir_name                 | путь к папке, которая содержит trusted SSL CA certificates in PEM format
    > --ssl-cert=file_name                  | путь к файлу, содержащему сертификат SSL для установки безопасного соединения
    > --ssl-cipher=cipher_list              | список разрешенных алгоритмов шифрования для использования с SSL
    > --ssl-crl=file_name                   | путь к файлу, содержащему certificate revocation lists
    > --ssl-crlpath=dir_name                | путь к папке, которая содержит certificate revocation list files
    > --ssl-key=file_name                   | путь к SSL key файлу для установки безопасного соединения
    > --ssl-verify-server-cert              | The server's Common Name value in its certificate is verified against the host name used when connecting to the server
    > --table                               | отображать вывод в табличном формате (включена по умолчанию)
    > --tee=file_name                       | записывать вывод в указанный файл
    > --unbuffered                          | очищать буфер после каждого запроса
    > --user=user_name                      | указать логин (имя пользователя) для подключения к серверу MySQL
    > --verbose                             | расширенный режим, в нем производится больше вывода о том, что делает программа
    > --version                             | вывести информацию о версии и quit
    > --vertical                            | выводить ответы на запросы вертикально
    > --wait                                | если соединение не устанавливается, подождать и попробовать еще, а не отменять
    > --xml                                 | производить XML вывод






-------------------------------------------------- */
?>















