////==================================================////
////                                                  ////
////                       Bash                       ////
////                                                  ////
////==================================================////
////                      ////
////         Ссылки       ////
////                      ////
////======================////


  // Руководства //
  //-------------//

    # Краткое руководство по Bash programming
        http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO.html

    # Более полное руководство по Bash programming
        http://tldp.org/LDP/Bash-Beginners-Guide/html/

  // Cheet sheets //
  //--------------//

    # Bourne-Again SHell and Linux CLI by Martin Bruchanov
        http://bruxy.regnet.cz/linux/bash_cheatsheet/bash_cheatsheet.pdf

    # Bash CheatSheet for UNIX Systems
        https://gist.github.com/LeCoupa/122b12050f5fb267e75f


////==================================================////
////                         ////
////        Оглавление       ////
////                         ////
////=========================////


  # А.  Bash

    А1. Вводная информация
    А2.


    Аx. Опции исполнения  // https://www.gnu.org/software/bash/manual/html_node/Invoking-Bash.html


////==================================================////
////                         ////
////        Содержание       ////
////                         ////
////=========================////

А1. Вводная информация

  --------------------------------------
  Подоглавление:

    # Ссылки
    # Введение
    # UNIX shell

      - Интерпретирует команды пользователя
      - Команды могут быть приняты в интерактивном режиме, или в файле
      - Шелл-скрипты интерпретируются, а не компилируются
      - Шелл обеспечивает окружение
      - Bash это shell проекта GNU

    # Фичи bash

      - Расширенный набор опций исполнения
      - Startup-конфиги bash
      - Интерактивные скрипты
      - Улучшенные условные операции [[, [, test
      - Арифметика с помощью let
      - Алиасы
      - Одномерные массивы
      - История недавно песещённых каталогов
      - Управление prompt-строкой

    # Какие конфиги считывает при старте

      - Интерактивный, аутентифицированный
      - Интерактивный, не аутентифицированный
      - Не интерактивный
      - SH-режим
      - POSIX-режим
      - Remote-режим
      - Режим UID != EUID

    # Отличия поведения интерактивных от не интерактивных скриптов

      - Читает startup-файлы
      - Job-control вкл по умолчанию
      - Prompt-строки не пусты
      - Команды считываются из командной строки,
      - Не выходит после EOF
      - История команд вкл по умолчанию
      - Alias Expansion включено
      - Сигнал SIGTERM игнорируется
      - Сигнал SIGINT ловится и обрабатывается
      - При выходе отправляет SIGHUP всем задачам
      - Команды выполняются сразу после чтения
      - Bash проверяет почту периодически
      - Выход при встрече unreferenced variables выкл
      - Выход при ошибках в redirection выкл
      - Выход в POSIX-режиме built-ins returning errors выкл
      - Ошибка в exec не приведёт к выходу из шелла
      - Ошиби парсинга не приводят к выходи из шелла
      - Простая проверка орфографии для cd вкл по умолчанию
      - Авто выход после истечения времени в TMOUT вкл

    # Исполнение команд



  --------------------------------------

  > Ссылки

    # Вводная глава в руководстве про Bash
        http://tldp.org/LDP/Bash-Beginners-Guide/html/chap_01.html

  > Введение
    - Эта глава с краткой вводной информацией о Bash.

  > UNIX shell

    • Интерпретирует команды пользователя
    • Команды могут быть приняты в интерактивном режиме, или в файле
    • Шелл-скрипты интерпретируются, а не компилируются

      ▪ Что делает шелл
        - Шелл считывает скрипт строку за строкой.
        - В каждой строке ищет имеющиеся в системе команды.

      ▪ Что происходило бы при компиляции
        - Но не происходит, ведь шелл интерпретирует, а не компилирует.
        - Компилятор преобразовывал бы программу в машинный код.
        - В итоге получая исполняемый файл, который можно использовать в шелл-скрипте.

    • Шелл обеспечивает окружение
      - Помипо передачи скрипта ядру, у шелла есть ещё важная задача.
      - Это организация индивидуальной среды окружения.

    • Bash это shell проекта GNU
      - Это бесплатный шелл от проекта GNU для UNIX-систем.
      - Он объединяет преимущества Korn shell (ksh) и C shell (csh), включая:

        ▪ Режим редактирования в командной строке
        ▪ Неограниченный размер истории команд
        ▪ Управления задачами
        ▪ Функции и алиасы
        ▪ Неограниченные индексированные массивы
        ▪ Целочисленная арифметика по основаниями от 2 до 64

      - Bash является sh-совемстимым шеллом.
      - Он может выполнить 99% sh-скриптов без необходимости их подстроить под Bash.

  > Фичи bash

    # Расширенный набор опций исполнения
      - Список всех опций исполнения доступен здесь:
          https://www.gnu.org/software/bash/manual/html_node/Invoking-Bash.html

    # Startup-конфиги bash
      - Bash перед исполнением скрипта считывает и применяет конфиги.
      - Какие именно зависит от обстоятельств.
      - Подробности в разделе ниже.

    # Интерактивные скрипты

      • Что такое интерактивные скрипты
        - Которые читают/пишут в пользовательский терминал.
        - То есть их ввод и вывод подключены к терминалу.
        - Включить bash в интерактивном режиме можно:

          ▪ Вызвав его без аргументов-не-опций: bash
          ▪ Кроме того случае, когда опцией является строка со скриптом.
          ▪ Или когда шеллу приказано читать из STDIN

      • Как проверить, в интерактивном или нет режиме исполняется скрипт
        - Для этого надо проверить содержимое спец.параметра -
        - Проверяем:

            echo $-

        - В интерактивном режиме он выдаст: himBH
        - В неинтерактивном режиме он будет пуст.

      • Отличия в поведении интерактивных, от не интерактивных скриптов
        - Имеются некоторые отличия, подробности в разделе ниже

    # Улучшенные условные операции [[, [, test
      - Сабж.

    # Арифметика с помощью let
      - Работать с арифметиком можно командой let.
      - Это одно из дополнений, внесённых шеллом bash.

    # Алиасы

      • Работать с алиасами можно командами alias / unalias.
      • Любой алиас срабатывает только на следующей строке кода.
        - Поэтому определить и использовать алиас на 1-й строке нельзя.
      • Алиасы и функции
        - Алиасы применяются при чтении определения функции, а не когда она исполняется
        - Потому что функция считается 1-й командой.
        - Алиасы из функции будут недоступными, пока она не будет выполнена.

    # Одномерные массивы
      - Bash обеспечивает переменные - одномерные массивы.
      - Любую переменную можно использовать в качестве массива.
      - Ключевое слово declare явно определяет массив.
      - Ограничений на размер массива нет.

    # История недавно песещённых каталогов

      • pushd
        - Ключевое слово pushd добавляет каталог в историю.
        - Это происходит каждый раз при смене текущего каталога.

      • popd
        - Ключевое слово popd удаляет каталог из истории.
        - И меняет текущий каталог на извлечённых из истории.

      • dirs
        - Содержимое истории можно просмотреть ключевым словом dirs.

    # Управление prompt-строкой
      - Подробнее про управление сабжем см. в методичке по Ubuntu.
      - А также на сайте GNU: https://www.gnu.org/software/bash/manual/html_node/Controlling-the-Prompt.html

  > Какие конфиги считывает при старте

    # Интерактивный, аутентифицированный
      - Интерактивный режим, аутентифицированный пользователь / или с опцией --login
      - Интерактивный значит, что ты можешь вводить команды.
      - Аутентифицированный, значит от лица аутентифицированного пользователя.
      - Считывает следующие конфиги:

        • /etc/profile
        • ~/.bash_profile, ~/.bash_login or ~/.profile: first existing readable file is read
        • ~/.bash_logout upon logout.

    # Интерактивный, не аутентифицированный
      - Интерактивный режим, не аутентифицированный пользователь
      - Считывает следующие конфиги:

        • ~/.bashrc

    # Не интерактивный
      - Не интерактивный режим
      - Все скрипты из файлов выполняются в неинтерактивном режиме.
      - Считывает следующие конфиги:

        • defined by BASH_ENV

    # SH-режим
      - Выполняется командой sh
      - Bash старается вести себя, как sh.
      - Считывает следующие конфиги:

        • /etc/profile
        • ~/.profile

    # POSIX-режим
      - Как включить режим POSIX:

        • Встроенной командой set: set -o posix
        • Выполнив скрипт с опцией --posix

      - Тогда bash будет стараться max соблюдать стандарты POSIX.
      - Установка переменной среды POSIXLY_CORRECT, это не тоже самое.
      - Считывает следующие конфиги:

        • defined by ENV variable.

    # Remote-режим
      - Исполняемые с удалённой машины
      - Считывает следующие конфиги:

        • ~/.bashrc

    # Режим UID != EUID
      - Вызов в случае, когда UID не совпадает с EUID
      - В этом случае конфиги не читаются.

  > Отличия поведения интерактивных от не интерактивных скриптов

    # Читает startup-файлы
    # Job-control вкл по умолчанию
    # Prompt-строки не пусты
    # Команды считываются из командной строки,
      - Используя опцию readline
    # Не выходит после EOF
      - Применяя опцию шелла ignoreeof.
    # История команд вкл по умолчанию
      - И хранитя в файле по адресу $HISTFILE
      - По умолчанию это ~/.bash_history.
    # Alias Expansion включено
    # Сигнал SIGTERM игнорируется
      - В отсутствии ловушек.
    # Сигнал SIGINT ловится и обрабатывается
      - Поэтому ctrl-c не приводит к немедленному выходу.
      - А шелл запрашивает подтверждения.
    # При выходе отправляет SIGHUP всем задачам
      - Используется опция huponexit
    # Команды выполняются сразу после чтения
    # Bash проверяет почту периодически
    # Выход при встрече unreferenced variables выкл
    # Выход при ошибках в redirection выкл
    # Выход в POSIX-режиме built-ins returning errors выкл
    # Ошибка в exec не приведёт к выходу из шелла
    # Ошиби парсинга не приводят к выходи из шелла
    # Простая проверка орфографии для cd вкл по умолчанию
    # Авто выход после истечения времени в TMOUT вкл

  > Исполнение команд

  




