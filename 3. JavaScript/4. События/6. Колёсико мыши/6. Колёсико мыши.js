/* --------------------------------------------------
---------------- О Г Л А В Л Е Н И Е ----------------
JavaScript -> События
6. Колёсико мыши

	> Пример работы с событием колёсика мыши






-------------------------------------------------- */


//Пример работы с событием колёсика мыши


	// Получить ссылка на элемент, над которым требуется поймать событие
	// колёсика мыши
	var div = document.getElementById('block');




	// Кроссбраузерно назначить функцию-обработчик событию колёсика мыши
		if (div.addEventListener) {
			if ('onwheel' in document) {
				// IE9+, FF17+
				div.addEventListener ("wheel", onWheel, false);
			} else if ('onmousewheel' in document) {
				// устаревший вариант события
				div.addEventListener ("mousewheel", onWheel, false);
			} else {
				// 3.5 <= Firefox < 17, более старое событие DOMMouseScroll пропустим
				div.addEventListener ("MozMousePixelScroll", onWheel, false);
			}
		} else { // IE<9
			div.attachEvent ("onmousewheel", onWheel);
		}



	// Функция-обработчик
	function onWheel(event) {

		// 	Кроссбраузерно получить ссылки на объект-событие event, а также
		//	на целевой объект target, в котором изначально произошло событие.

				// Кроссбраузерно получить событие
				event = event || window.event;

				// Кроссбраузерно получить target-элемент
				var target = 	event && event.target ||
											event.srcElement;


		// Получить ссылку на элемент span, в который мы будем записывать
		// результаты прокрутки:
		var span = document.getElementById('wheelInfo');


		// Получить величину прокрутки кроссбраузерно
		var delta = event.deltaY  ||
								event.detail  ||
								event.wheelDelta;

		// Кроссбраузерно отменить действия браузера "по умолчанию" в ответ
		// на возникновение события:
		event.preventDefault ? event.preventDefault() :
													(event.returnValue=false);


		// Вывести на экран размер delta в элементе span
		span.innerHTML = +span.innerHTML + delta;

	}








/* --------------------------------------------------
---------------- И Н Ф О Р М А Ц И Я ----------------


Ссылки:


	> Глава "Колёсико мыши: "wheel" и аналоги" учебника по JavaScript
		от Ильи Кантора:
				http://learn.javascript.ru/mousewheel




*****************************************************
Оглавление:

	> В каких случаях можно использовать события колёсика мыши?
	> Колёсико и прокрутка страницы - разные вещи
	> Поддержка события колёсика в разных браузерах
	> Ошибка в IE8
	> Кроссбраузерный способ перехватить событие колёсика мыши



*****************************************************




> В каких случаях можно использовать события колёсика мыши?
	> Колёсико есть не у всех мышей. Его также нет на различных мобильных
		устройствах. Т.О. далеко не каждый пользователь сможет сгенерировать
		события колёсика мыши.
	> Поэтому, события колёсика мыши:
	 	- стоит использовать только для создания каких-то доп. удобств для
	 		тех пользователей, которые в принципе могут его генерировать.
	 	- не стоит использовать для важных функций веб-приложения, без которых
	 		оно стало бы функционировать хуже.
	> Короче говоря, основной принцип, которого надо придерживатсья при
		использовании события колёсика мыши:
		 "Если в любой момент отключить связанный с этим функционал, приложение
		  продолжит работать нормально, и пользователи ничего не почувствуют".


> Колёсико и прокрутка страницы - разные вещи

	> Прокрутка
		- При прокрутке срабатывает событие onscroll
		- Срабатывает при любой прокрутке, в Т.Ч. через клавиатуру
		- Срабатывает только на прокручиваемых элементах. Например, элемент
			с overflow: hidden в принципе не может сгенерировать такое событие.
		- Событие onscroll происходит уже ПОСЛЕ прокрутки.

	> Колёсико мыши
		- Когда крутят колесико мыши, срабатывает событие wheel.
		- Это событие является чисто "мышиным".
		- Генерируется над любым элементом при кручении колёсика мыши.
		- Срабатывает над любым элементом, не важно, является ли он прокручиваемым,
			или нет. Например, overflow: hidden никак не препятствует возникновению
			этого события на этом элементе.
		- Событие wheel происходит ДО прокрутки


> Поддержка события колёсика в разных браузерах

	> Общая информация
		> Облики события wheel
			> Событие wheel - стандартизировано W3.
			> Событие mousewheel - используется в тех версиях браузеров, в которых
				еще не реализовали wheel в соответствии со стандартом.
			> Событие MozMousePixelScroll - использовалось в Firefox вместо mousewheel.
		> Во всех современных браузерах (10.12.2013) уже реализовано событие wheel.
		  Однако, все же лучше использовать кроссбраузерный вариант.

	> О wheel
		> e.deltaX  	| ожидается, что страница прокрутится на это колич.
										пикселей по оси X.
		> e.deltaY  	| ожидается, что страница прокрутится на это колич.
										пикселей по оси Y.
		> e.deltaZ  	| ожидается, что страница прокрутится на это колич.
										пикселей по оси Y.

	> О MozMousePixelScroll
		> e.axis			| ось прокрутки
		> e.detail		| размер прокрутки в px

	> О mousewheel
		> w.wheelDelta	| условный размер прокрутки: 120 вверх, -120 вниз,
											это не px, а условные единицы.


> Ошибка в IE8
	> Эта ошибка присутствует только в IE8
	> Суть ошибки: если у элемента есть назначенная функция-обработчик mousewheel,
		то он не скроллится - Т.Е. автоматически отключаются действия браузера
		"по умолчанию".



> Кроссбраузерный способ перехватить событие колёсика мыши.

	var onWheel = function(event) {
		... код обработчика событий ...
	};

	// Кроссбраузерно назначить функцию-обработчик событию колёсика мыши
		if (elem.addEventListener) {
			if ('onwheel' in document) {
				// IE9+, FF17+
				elem.addEventListener ("wheel", onWheel, false);
			} else if ('onmousewheel' in document) {
				// устаревший вариант события
				elem.addEventListener ("mousewheel", onWheel, false);
			} else {
				// 3.5 <= Firefox < 17, более старое событие DOMMouseScroll пропустим
				elem.addEventListener ("MozMousePixelScroll", onWheel, false);
			}
		} else { // IE<9
			elem.attachEvent ("onmousewheel", onWheel);
		}







-------------------------------------------------- */





















