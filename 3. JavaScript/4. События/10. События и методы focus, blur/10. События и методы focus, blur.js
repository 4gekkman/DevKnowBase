/* --------------------------------------------------
---------------- О Г Л А В Л Е Н И Е ----------------
JavaScript -> События
10. События и методы focus, blur


	> Сфокусироваться на элементе из JS с помощью метода focus()




-------------------------------------------------- */


//Сфокусироваться на элементе из JS с помощью метода focus()
function showForm() {
  var form = document.forms.form;
  form.style.display = 'block';

  form.elements.search.focus();

}













/* --------------------------------------------------
---------------- И Н Ф О Р М А Ц И Я ----------------


Ссылки:


	> Глава 'События и методы "focus/blur"'
		учебника по JavaScript от Ильи Кантора:
				http://learn.javascript.ru/focus-blur



*****************************************************
Оглавление:


	> Введение
	> События focus и blur НЕ всплывают: проблема и решение

	> Событие focus и метод focus()
		> Получить ссылку на эл-т с фокусом: document.activeElement
		> Фокусировка средствами HTML5 и CSS3
			> Фокусировка
			> Автофокус
			> Плейсхолдер
		> Сфокусироваться на эл-те elem из JS: elem.focus()
		> Разрешить фокусировку на любом элементе: атрибут tabindex

	> Событие blur и метод blur()
		> Заставить элемент elem потерять фокус: elem.blur()
		> Часто используют: валидация эл-та формы при потере им фокуса

	> Живые примеры:
		> Выбор из списка клавишей TAB
		> Валидация при потере фокуса
		> Двигать эл-т с фокусом стрелками клавиатуры
		> Div с редактируемым текстом
		> Кастомный плейсхолдер



*****************************************************


> Введение
	> Событие focus возбуждается, когда пользователь фокусируется на эл-те.
		Например, если пользователь по нему кликнет.
	> Событие blur возбуждается, когда форкус у эл-та исчезает.
		Например, если пользователь кликнет на другом месте экрана.
	> По умолчанию не все эл-ты поддерживают события focus и blur.
		> Все элементы, с которыми посетитель может взаимодействовать, всегда
			поддерживают. Это такие эл-ты, как input, select, a.
		> Элементы для форматирования наоборот - не поддерживают по умолчанию.
			Это такие эл-ты, как div, span, table и т.д.
			> Но и для них есть способ включить фокусировку (см. ниже про tabindex)


> События focus и blur НЕ всплывают: проблема и решение
	> Сабж.
	> Есть 2 варианта обхода этой проблемы:

		> 1 вариант - есть всплывающие альтернативы
			> Есть всплывающие альтернативы: focusin/focusout.
				> Поддерживаются во всех браузерах, кроме FireFox.
				> Поэтому пока их нельзя использовать в реальных проектах.

		> 2 вариант - ловить их на стадии захвата
		 	> Сработает во всех браузерах, кроме IE<=8

		> Кроссбраузерное решение: 1 вариант + 2 вариант.
			> Пример:

					function onFormFocus() { this.className = 'focused'; }
					function onFormBlur() { this.className = ''; }

					var form = document.forms.form;

					if (form.addEventListener) {
						form.addEventListener('focus', onFormFocus, true);
						form.addEventListener('blur', onFormBlur, true);
					} else {  // IE<9
						form.onfocusin = onFormFocus;
						form.onfocusout = onFormBlur;
					}


> Событие focus и метод focus()

	> Получить ссылку на эл-т с фокусом: document.activeElement
		> Текущий элемент, на котором фокус, доступен как:

				document.activeElement.


	> Фокусировка средствами HTML5 и CSS3

		> Ссылка на соответствующий раздел моего справочника:
			autofocus, placeholder:
				1. HTML 5 ->
				1. Справочник HTML ->
				3. Формы

			:focus:
				2. CSS 3 ->
				0b. Селекторы CSS

		> Фокусировка
				input:focus {
					outline: 1px solid #f00;
				}

		> Автофокус
				<input type='text' autofocus>

		> Плейсхолдер
				<input type='text' placeholder='Введите свою информацию'>


	> Сфокусироваться на эл-те elem из JS: elem.focus()
		> Сабж.
		> Пример: см. выше в примерах


	> Разрешить фокусировку на любом элементе: атрибут tabindex
		> Любому элементу можно присвоить HTML-атрибут tabindex.
		> На любом элементе с атрибутом tabindex можно сфокусироваться.
		> Пользователь при нажатии клавиши "TAB" переходит от элемента с
			наименьшим положительным значением tabindex к следующему.
			> Исключение: элемент с tabindex='0' - он всегда последний.
		> Значение tabindex='-1' означает, что на элементе можно сфокусироваться,
			но только программно - с помощью метода focus(). А клавишей TAB нельзя.


> Событие blur и метод blur()

	> Заставить элемент elem потерять фокус: elem.blur()
		> Метод blur() позволяет заставить элемент elem потерять фокус,
			если таковой имеется.

	> Часто используют: валидация эл-та формы при потере им фокуса
		> Часто событие blur используют для валидации содержимого эл-та
			формы при потере им фокуса.
		> Данный вид валидации полезен, когда требуется проверять значение
			лишь по окончании ввода, а не при каждом его изменении.
		> Для этого просто назначают функцию-обработчик события onblur,
			и в ней проводят валидацию. Например:

			При возбуждении события blur проводить валидацию и выставлять
			сообщение об ошибке:
			-----
				elem.onblur = function() {

					// Если введено не число, вывести сообщение об ошибке
					if(isNaN(this.value)) {
						this.className = 'error';
						errorHolder.innerHTML = 'Вы ввели не число';
					}

				}

			При возбуждении focus убирать сообщение об ошибке, если оно есть:
			-----
				elem.onfocus = function() {
					if( this.className = 'error') {
						this.className = '';
						errorHolder.innerHTML = '';
					}
				}


> Живые примеры:
	> Выбор из списка клавишей TAB

			3. JavaScript ->
			2. Events ->
			25. Focus - choosing from list

	> Валидация при потере фокуса

			3. JavaScript ->
			2. Events ->
			26. Focus, Blur validation

	> Двигать эл-т с фокусом стрелками клавиатуры

			3. JavaScript ->
			2. Events ->
			27. Focus - move focused elem by arrows

	> Div с редактируемым текстом

			3. JavaScript ->
			2. Events ->
			28. Focus - editable div

	> Кастомный плейсхолдер

			3. JavaScript ->
			2. Events ->
			29. Focus - placeholder











-------------------------------------------------- */


















