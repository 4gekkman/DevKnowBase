/* --------------------------------------------------
---------------- О Г Л А В Л Е Н И Е ----------------
JavaScript -> События
7. Буксировка (DRAG) элементов DOM

	>






-------------------------------------------------- */














/* --------------------------------------------------
---------------- И Н Ф О Р М А Ц И Я ----------------


Ссылки:


	> Глава "Основы Drag'n'Drop" учебника по JavaScript
		от Ильи Кантора:
				http://learn.javascript.ru/drag-and-drop




*****************************************************
Оглавление:

	> О буксировке элементов DOM
	> Базовая логика буксировки элементов DOM
	> Отмена буксировки браузера "по умолчанию"
	> Событие mousemove при буксировке надо ловить на document
	> Живые работающие примеры:
		> Простой пример буксировки элементов
		> Буксировка элемента за ручку (окно за заголовочную полосу)
		> Перерисовка линий-связей между элементами при буксировке
		> Слайдер



*****************************************************




> О буксировке элементов DOM
	> Условно можно разбить тему drag and drop на 2 части:
		- Буксировка элементов DOM с помощью событий мыши.
		- Приём файла в браузер с помощью событий HTML5
	> В этом учебном файле речь будет идти и буксировке элементов DOM.
		Речь о приёме файла пойдет в следующем учебном файле.
	> Буксировка элементов DOM - изменение их координат с помощью мыши.


> Базовая логика буксировки элементов DOM
	1. С помощью события mousedown отследить нажатие на переносимом элементе.
	2. При нажатии подготовить объект к перемещению:
		 - Сделать ему position: absolute
		 - Вычислить такие координаты его ЛВ угла, и присвоить их ему с помощью
		 	 left и top, чтобы элемент остался в том же месте, где на него нажали.
		 - Отслеживать событие mousemove, и изменять left/top элемента
		 	 тем самым меняя его положение.
	3. При отпускании кнопки мыши, т.е. наступлении события mouseup - остановить
		 перенос элемента и произвести все действия, связанные с его окончанием.


> Отмена буксировки браузера "по умолчанию"

	> Описание проблемы
		> Эта проблема возникает при организации буксировки для изображений.
		> При нажатии кнопки браузер начинает реализовывать свой собственный
			механизм буксировки для изображений. Он возбуждает событие dragstart,
			в ответ на которое и возникают вышеописанные действия по умолчанию.

	> Решение
		> Нужно отменить действия по умолчанию для события dragstart, поймав
			его на буксируемом элементе с помощью функции-обработчика:

				// Отменить действия браузера "по умолчанию" для события dragstart
				element.ondragstart = function(event) {

					// Кроссбраузерно получить объект-событие
					event = event || window.event

					// Кроссбраузерно отменить действия браузера "по умолчанию" в ответ
					// на возникновение события:
					event.preventDefault ? event.preventDefault() :
																(event.returnValue=false);
				};


> Событие mousemove при буксировке надо ловить на document
	> Событие mousemove при буксировке надо ловить на document, а не на
		буксируемом элементе.
	> Потому что во время буксировки курсор мыши далеко не всегда находится
		на буксируемом элементе - он зачастую отстает от курсора.


	> Живые работающие примеры:
		> Простой пример буксировки элементов:

				'0. Practical samples and techniques' ->
				'2. Events' ->
				'17. Drag of DOM elements'


		> Буксировка элемента за ручку (окно за заголовочную полосу):

				'0. Practical samples and techniques' ->
				'1. AJAX, COMET' ->
				'9. Drag of absolute HTML-element'


		> Перерисовка линий-связей между элементами при буксировке:

				'0. Practical samples and techniques' ->
				'1. AJAX, COMET' ->
				'10. Draw lines between 2 draggable HTML-elements'


		> Слайдер

				'0. Practical samples and techniques' ->
				'2. Events' ->
				'18. Slider template'






-------------------------------------------------- */





















